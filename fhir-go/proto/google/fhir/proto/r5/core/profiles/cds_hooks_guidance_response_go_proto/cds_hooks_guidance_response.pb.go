//    Copyright 2020 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: proto/google/fhir/proto/r5/core/profiles/cds_hooks_guidance_response.proto

package cds_hooks_guidance_response_go_proto

import (
	any "github.com/golang/protobuf/ptypes/any"
	_ "github.com/google/fhir/go/proto/google/fhir/proto/annotations_go_proto"
	codes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r5/core/codes_go_proto"
	datatypes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r5/core/datatypes_go_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Auto-generated from StructureDefinition for CDS Hooks GuidanceResponse.
// The formal response to a guidance request.
// See http://hl7.org/fhir/StructureDefinition/cdshooksguidanceresponse
type CDSHooksGuidanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Logical id of this artifact
	Id *datatypes_go_proto.Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *datatypes_go_proto.Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *datatypes_go_proto.Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *datatypes_go_proto.Code `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *datatypes_go_proto.Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*any.Any `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Extension
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,8,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,9,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The identifier of the request associated with this response, if any
	RequestIdentifier *datatypes_go_proto.Identifier `protobuf:"bytes,10,opt,name=request_identifier,json=requestIdentifier,proto3" json:"request_identifier,omitempty"`
	// Business identifier
	Identifier *datatypes_go_proto.Identifier       `protobuf:"bytes,11,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Module     *CDSHooksGuidanceResponse_ModuleX    `protobuf:"bytes,12,opt,name=module,proto3" json:"module,omitempty"`
	Status     *CDSHooksGuidanceResponse_StatusCode `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	// Patient the request was performed for
	Subject *datatypes_go_proto.Reference `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject,omitempty"`
	// Encounter during which the response was returned
	Encounter *datatypes_go_proto.Reference `protobuf:"bytes,15,opt,name=encounter,proto3" json:"encounter,omitempty"`
	// When the guidance response was processed
	OccurrenceDateTime *datatypes_go_proto.DateTime `protobuf:"bytes,16,opt,name=occurrence_date_time,json=occurrenceDateTime,proto3" json:"occurrence_date_time,omitempty"`
	// Device returning the guidance
	Performer *datatypes_go_proto.Reference `protobuf:"bytes,17,opt,name=performer,proto3" json:"performer,omitempty"`
	// Why guidance is needed
	Reason []*datatypes_go_proto.CodeableReference `protobuf:"bytes,18,rep,name=reason,proto3" json:"reason,omitempty"`
	// Additional notes about the response
	Note []*datatypes_go_proto.Annotation `protobuf:"bytes,19,rep,name=note,proto3" json:"note,omitempty"`
	// Messages resulting from the evaluation of the artifact or artifacts
	EvaluationMessage []*datatypes_go_proto.Reference `protobuf:"bytes,20,rep,name=evaluation_message,json=evaluationMessage,proto3" json:"evaluation_message,omitempty"`
	// The output parameters of the evaluation, if any
	OutputParameters *datatypes_go_proto.Reference `protobuf:"bytes,21,opt,name=output_parameters,json=outputParameters,proto3" json:"output_parameters,omitempty"`
	// Proposed actions, if any
	Result *datatypes_go_proto.Reference `protobuf:"bytes,22,opt,name=result,proto3" json:"result,omitempty"`
	// Additional required data
	DataRequirement []*datatypes_go_proto.DataRequirement `protobuf:"bytes,23,rep,name=data_requirement,json=dataRequirement,proto3" json:"data_requirement,omitempty"`
	// Service endpoint
	CdsHooksEndpoint *datatypes_go_proto.Uri `protobuf:"bytes,24,opt,name=cds_hooks_endpoint,json=cdsHooksEndpoint,proto3" json:"cds_hooks_endpoint,omitempty"`
}

func (x *CDSHooksGuidanceResponse) Reset() {
	*x = CDSHooksGuidanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDSHooksGuidanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDSHooksGuidanceResponse) ProtoMessage() {}

func (x *CDSHooksGuidanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDSHooksGuidanceResponse.ProtoReflect.Descriptor instead.
func (*CDSHooksGuidanceResponse) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_rawDescGZIP(), []int{0}
}

func (x *CDSHooksGuidanceResponse) GetId() *datatypes_go_proto.Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetMeta() *datatypes_go_proto.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetImplicitRules() *datatypes_go_proto.Uri {
	if x != nil {
		return x.ImplicitRules
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetLanguage() *datatypes_go_proto.Code {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetText() *datatypes_go_proto.Narrative {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetContained() []*any.Any {
	if x != nil {
		return x.Contained
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetRequestIdentifier() *datatypes_go_proto.Identifier {
	if x != nil {
		return x.RequestIdentifier
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetIdentifier() *datatypes_go_proto.Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetModule() *CDSHooksGuidanceResponse_ModuleX {
	if x != nil {
		return x.Module
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetStatus() *CDSHooksGuidanceResponse_StatusCode {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetSubject() *datatypes_go_proto.Reference {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetEncounter() *datatypes_go_proto.Reference {
	if x != nil {
		return x.Encounter
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetOccurrenceDateTime() *datatypes_go_proto.DateTime {
	if x != nil {
		return x.OccurrenceDateTime
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetPerformer() *datatypes_go_proto.Reference {
	if x != nil {
		return x.Performer
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetReason() []*datatypes_go_proto.CodeableReference {
	if x != nil {
		return x.Reason
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetNote() []*datatypes_go_proto.Annotation {
	if x != nil {
		return x.Note
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetEvaluationMessage() []*datatypes_go_proto.Reference {
	if x != nil {
		return x.EvaluationMessage
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetOutputParameters() *datatypes_go_proto.Reference {
	if x != nil {
		return x.OutputParameters
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetResult() *datatypes_go_proto.Reference {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetDataRequirement() []*datatypes_go_proto.DataRequirement {
	if x != nil {
		return x.DataRequirement
	}
	return nil
}

func (x *CDSHooksGuidanceResponse) GetCdsHooksEndpoint() *datatypes_go_proto.Uri {
	if x != nil {
		return x.CdsHooksEndpoint
	}
	return nil
}

// What guidance was requested
type CDSHooksGuidanceResponse_ModuleX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*CDSHooksGuidanceResponse_ModuleX_Uri
	Choice isCDSHooksGuidanceResponse_ModuleX_Choice `protobuf_oneof:"choice"`
}

func (x *CDSHooksGuidanceResponse_ModuleX) Reset() {
	*x = CDSHooksGuidanceResponse_ModuleX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDSHooksGuidanceResponse_ModuleX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDSHooksGuidanceResponse_ModuleX) ProtoMessage() {}

func (x *CDSHooksGuidanceResponse_ModuleX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDSHooksGuidanceResponse_ModuleX.ProtoReflect.Descriptor instead.
func (*CDSHooksGuidanceResponse_ModuleX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_rawDescGZIP(), []int{0, 0}
}

func (m *CDSHooksGuidanceResponse_ModuleX) GetChoice() isCDSHooksGuidanceResponse_ModuleX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *CDSHooksGuidanceResponse_ModuleX) GetUri() *datatypes_go_proto.Uri {
	if x, ok := x.GetChoice().(*CDSHooksGuidanceResponse_ModuleX_Uri); ok {
		return x.Uri
	}
	return nil
}

type isCDSHooksGuidanceResponse_ModuleX_Choice interface {
	isCDSHooksGuidanceResponse_ModuleX_Choice()
}

type CDSHooksGuidanceResponse_ModuleX_Uri struct {
	Uri *datatypes_go_proto.Uri `protobuf:"bytes,1,opt,name=uri,proto3,oneof"`
}

func (*CDSHooksGuidanceResponse_ModuleX_Uri) isCDSHooksGuidanceResponse_ModuleX_Choice() {}

// success | data-requested | data-required | in-progress | failure |
// entered-in-error
type CDSHooksGuidanceResponse_StatusCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.GuidanceResponseStatusCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r5.core.GuidanceResponseStatusCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                      `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension                 `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *CDSHooksGuidanceResponse_StatusCode) Reset() {
	*x = CDSHooksGuidanceResponse_StatusCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDSHooksGuidanceResponse_StatusCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDSHooksGuidanceResponse_StatusCode) ProtoMessage() {}

func (x *CDSHooksGuidanceResponse_StatusCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDSHooksGuidanceResponse_StatusCode.ProtoReflect.Descriptor instead.
func (*CDSHooksGuidanceResponse_StatusCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_rawDescGZIP(), []int{0, 1}
}

func (x *CDSHooksGuidanceResponse_StatusCode) GetValue() codes_go_proto.GuidanceResponseStatusCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.GuidanceResponseStatusCode_INVALID_UNINITIALIZED
}

func (x *CDSHooksGuidanceResponse_StatusCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CDSHooksGuidanceResponse_StatusCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

var File_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto protoreflect.FileDescriptor

var file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_rawDesc = []byte{
	0x0a, 0x4a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x35, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x63, 0x64, 0x73, 0x5f, 0x68,
	0x6f, 0x6f, 0x6b, 0x73, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x72, 0x35, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x35,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x12, 0x0a, 0x18, 0x43, 0x44, 0x53, 0x48, 0x6f, 0x6f,
	0x6b, 0x73, 0x47, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0e, 0x69, 0x6d,
	0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x72, 0x69, 0x52, 0x0d, 0x69, 0x6d,
	0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x61, 0x72, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x11, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x47, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x0a, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43,
	0x44, 0x53, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x47, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x58, 0x42,
	0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x58, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x44, 0x53, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x47, 0x75,
	0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04,
	0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x52, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x18, 0xf2, 0xff, 0xfc, 0xc2,
	0x06, 0x07, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x05, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x4d, 0x0a,
	0x09, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x42, 0x0f, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x09, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x52, 0x09, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x14,
	0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x12, 0x6f, 0x63, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4a, 0x0a,
	0x09, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x42, 0x0c, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x09,
	0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x65,
	0x0a, 0x12, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x16, 0xf2, 0xff, 0xfc, 0xc2,
	0x06, 0x10, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x63, 0x6f,
	0x6d, 0x65, 0x52, 0x11, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5d, 0x0a, 0x11, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x42, 0x10, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x58, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x42, 0x20, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x08, 0x43, 0x61, 0x72, 0x65,
	0x50, 0x6c, 0x61, 0x6e, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4f,
	0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x90, 0x01, 0x0a, 0x12, 0x63, 0x64, 0x73, 0x5f, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x5f, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x55, 0x72, 0x69, 0x42, 0x48, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0xaa, 0xfc,
	0x8f, 0x93, 0x06, 0x3c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x71, 0x66, 0x2d,
	0x63, 0x64, 0x73, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x10, 0x63, 0x64, 0x73, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x1a, 0x49, 0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x58, 0x12, 0x2c, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x55, 0x72, 0x69, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72, 0x69, 0x3a, 0x06, 0xa0, 0x83, 0x83,
	0xe8, 0x06, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x1a, 0xb9, 0x02,
	0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4b, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x47, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x73, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2,
	0x05, 0x35, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x67,
	0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x2d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x3a, 0x8a, 0x01, 0xc0, 0x9f, 0xe3, 0xb6,
	0x05, 0x03, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x38, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x47, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0xb2, 0xfe, 0xe4, 0x97, 0x06, 0x40, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x64,
	0x73, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x67, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x42, 0x8a, 0x01, 0x0a,
	0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x01, 0x5a, 0x67, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x35,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x63,
	0x64, 0x73, 0x5f, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x98, 0xc6, 0xb0, 0xb5, 0x07, 0x05, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_rawDescOnce sync.Once
	file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_rawDescData = file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_rawDesc
)

func file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_rawDescGZIP() []byte {
	file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_rawDescOnce.Do(func() {
		file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_rawDescData)
	})
	return file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_rawDescData
}

var file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_goTypes = []interface{}{
	(*CDSHooksGuidanceResponse)(nil),                     // 0: google.fhir.r5.core.CDSHooksGuidanceResponse
	(*CDSHooksGuidanceResponse_ModuleX)(nil),             // 1: google.fhir.r5.core.CDSHooksGuidanceResponse.ModuleX
	(*CDSHooksGuidanceResponse_StatusCode)(nil),          // 2: google.fhir.r5.core.CDSHooksGuidanceResponse.StatusCode
	(*datatypes_go_proto.Id)(nil),                        // 3: google.fhir.r5.core.Id
	(*datatypes_go_proto.Meta)(nil),                      // 4: google.fhir.r5.core.Meta
	(*datatypes_go_proto.Uri)(nil),                       // 5: google.fhir.r5.core.Uri
	(*datatypes_go_proto.Code)(nil),                      // 6: google.fhir.r5.core.Code
	(*datatypes_go_proto.Narrative)(nil),                 // 7: google.fhir.r5.core.Narrative
	(*any.Any)(nil),                                      // 8: google.protobuf.Any
	(*datatypes_go_proto.Extension)(nil),                 // 9: google.fhir.r5.core.Extension
	(*datatypes_go_proto.Identifier)(nil),                // 10: google.fhir.r5.core.Identifier
	(*datatypes_go_proto.Reference)(nil),                 // 11: google.fhir.r5.core.Reference
	(*datatypes_go_proto.DateTime)(nil),                  // 12: google.fhir.r5.core.DateTime
	(*datatypes_go_proto.CodeableReference)(nil),         // 13: google.fhir.r5.core.CodeableReference
	(*datatypes_go_proto.Annotation)(nil),                // 14: google.fhir.r5.core.Annotation
	(*datatypes_go_proto.DataRequirement)(nil),           // 15: google.fhir.r5.core.DataRequirement
	(codes_go_proto.GuidanceResponseStatusCode_Value)(0), // 16: google.fhir.r5.core.GuidanceResponseStatusCode.Value
	(*datatypes_go_proto.String)(nil),                    // 17: google.fhir.r5.core.String
}
var file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_depIdxs = []int32{
	3,  // 0: google.fhir.r5.core.CDSHooksGuidanceResponse.id:type_name -> google.fhir.r5.core.Id
	4,  // 1: google.fhir.r5.core.CDSHooksGuidanceResponse.meta:type_name -> google.fhir.r5.core.Meta
	5,  // 2: google.fhir.r5.core.CDSHooksGuidanceResponse.implicit_rules:type_name -> google.fhir.r5.core.Uri
	6,  // 3: google.fhir.r5.core.CDSHooksGuidanceResponse.language:type_name -> google.fhir.r5.core.Code
	7,  // 4: google.fhir.r5.core.CDSHooksGuidanceResponse.text:type_name -> google.fhir.r5.core.Narrative
	8,  // 5: google.fhir.r5.core.CDSHooksGuidanceResponse.contained:type_name -> google.protobuf.Any
	9,  // 6: google.fhir.r5.core.CDSHooksGuidanceResponse.extension:type_name -> google.fhir.r5.core.Extension
	9,  // 7: google.fhir.r5.core.CDSHooksGuidanceResponse.modifier_extension:type_name -> google.fhir.r5.core.Extension
	10, // 8: google.fhir.r5.core.CDSHooksGuidanceResponse.request_identifier:type_name -> google.fhir.r5.core.Identifier
	10, // 9: google.fhir.r5.core.CDSHooksGuidanceResponse.identifier:type_name -> google.fhir.r5.core.Identifier
	1,  // 10: google.fhir.r5.core.CDSHooksGuidanceResponse.module:type_name -> google.fhir.r5.core.CDSHooksGuidanceResponse.ModuleX
	2,  // 11: google.fhir.r5.core.CDSHooksGuidanceResponse.status:type_name -> google.fhir.r5.core.CDSHooksGuidanceResponse.StatusCode
	11, // 12: google.fhir.r5.core.CDSHooksGuidanceResponse.subject:type_name -> google.fhir.r5.core.Reference
	11, // 13: google.fhir.r5.core.CDSHooksGuidanceResponse.encounter:type_name -> google.fhir.r5.core.Reference
	12, // 14: google.fhir.r5.core.CDSHooksGuidanceResponse.occurrence_date_time:type_name -> google.fhir.r5.core.DateTime
	11, // 15: google.fhir.r5.core.CDSHooksGuidanceResponse.performer:type_name -> google.fhir.r5.core.Reference
	13, // 16: google.fhir.r5.core.CDSHooksGuidanceResponse.reason:type_name -> google.fhir.r5.core.CodeableReference
	14, // 17: google.fhir.r5.core.CDSHooksGuidanceResponse.note:type_name -> google.fhir.r5.core.Annotation
	11, // 18: google.fhir.r5.core.CDSHooksGuidanceResponse.evaluation_message:type_name -> google.fhir.r5.core.Reference
	11, // 19: google.fhir.r5.core.CDSHooksGuidanceResponse.output_parameters:type_name -> google.fhir.r5.core.Reference
	11, // 20: google.fhir.r5.core.CDSHooksGuidanceResponse.result:type_name -> google.fhir.r5.core.Reference
	15, // 21: google.fhir.r5.core.CDSHooksGuidanceResponse.data_requirement:type_name -> google.fhir.r5.core.DataRequirement
	5,  // 22: google.fhir.r5.core.CDSHooksGuidanceResponse.cds_hooks_endpoint:type_name -> google.fhir.r5.core.Uri
	5,  // 23: google.fhir.r5.core.CDSHooksGuidanceResponse.ModuleX.uri:type_name -> google.fhir.r5.core.Uri
	16, // 24: google.fhir.r5.core.CDSHooksGuidanceResponse.StatusCode.value:type_name -> google.fhir.r5.core.GuidanceResponseStatusCode.Value
	17, // 25: google.fhir.r5.core.CDSHooksGuidanceResponse.StatusCode.id:type_name -> google.fhir.r5.core.String
	9,  // 26: google.fhir.r5.core.CDSHooksGuidanceResponse.StatusCode.extension:type_name -> google.fhir.r5.core.Extension
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_init() }
func file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_init() {
	if File_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDSHooksGuidanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDSHooksGuidanceResponse_ModuleX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDSHooksGuidanceResponse_StatusCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*CDSHooksGuidanceResponse_ModuleX_Uri)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_goTypes,
		DependencyIndexes: file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_depIdxs,
		MessageInfos:      file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_msgTypes,
	}.Build()
	File_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto = out.File
	file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_rawDesc = nil
	file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_goTypes = nil
	file_proto_google_fhir_proto_r5_core_profiles_cds_hooks_guidance_response_proto_depIdxs = nil
}
