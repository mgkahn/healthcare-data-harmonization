//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: proto/google/fhir/proto/r4/qicore/codes.proto

package codes_go_proto

import (
	_ "github.com/google/fhir/go/proto/google/fhir/proto/annotations_go_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppropriatenessScoreCode_Value int32

const (
	AppropriatenessScoreCode_INVALID_UNINITIALIZED   AppropriatenessScoreCode_Value = 0
	AppropriatenessScoreCode_EXTREMELY_INAPPROPRIATE AppropriatenessScoreCode_Value = 1
	AppropriatenessScoreCode_INAPPROPRIATE           AppropriatenessScoreCode_Value = 2
	AppropriatenessScoreCode_PROBABLY_INAPPROPRIATE  AppropriatenessScoreCode_Value = 3
	AppropriatenessScoreCode_UNCERTAIN_INAPPROPRIATE AppropriatenessScoreCode_Value = 4
	AppropriatenessScoreCode_UNCERTAIN               AppropriatenessScoreCode_Value = 5
	AppropriatenessScoreCode_UNCERTAIN_APPROPRIATE   AppropriatenessScoreCode_Value = 6
	AppropriatenessScoreCode_PROBABLY_APPROPRIATE    AppropriatenessScoreCode_Value = 7
	AppropriatenessScoreCode_APPROPRIATE             AppropriatenessScoreCode_Value = 8
	AppropriatenessScoreCode_EXTREMELY_APPROPRIATE   AppropriatenessScoreCode_Value = 9
)

// Enum value maps for AppropriatenessScoreCode_Value.
var (
	AppropriatenessScoreCode_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "EXTREMELY_INAPPROPRIATE",
		2: "INAPPROPRIATE",
		3: "PROBABLY_INAPPROPRIATE",
		4: "UNCERTAIN_INAPPROPRIATE",
		5: "UNCERTAIN",
		6: "UNCERTAIN_APPROPRIATE",
		7: "PROBABLY_APPROPRIATE",
		8: "APPROPRIATE",
		9: "EXTREMELY_APPROPRIATE",
	}
	AppropriatenessScoreCode_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED":   0,
		"EXTREMELY_INAPPROPRIATE": 1,
		"INAPPROPRIATE":           2,
		"PROBABLY_INAPPROPRIATE":  3,
		"UNCERTAIN_INAPPROPRIATE": 4,
		"UNCERTAIN":               5,
		"UNCERTAIN_APPROPRIATE":   6,
		"PROBABLY_APPROPRIATE":    7,
		"APPROPRIATE":             8,
		"EXTREMELY_APPROPRIATE":   9,
	}
)

func (x AppropriatenessScoreCode_Value) Enum() *AppropriatenessScoreCode_Value {
	p := new(AppropriatenessScoreCode_Value)
	*p = x
	return p
}

func (x AppropriatenessScoreCode_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppropriatenessScoreCode_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[0].Descriptor()
}

func (AppropriatenessScoreCode_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[0]
}

func (x AppropriatenessScoreCode_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppropriatenessScoreCode_Value.Descriptor instead.
func (AppropriatenessScoreCode_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{0, 0}
}

type CommunicationMediumCode_Value int32

const (
	CommunicationMediumCode_INVALID_UNINITIALIZED CommunicationMediumCode_Value = 0
	CommunicationMediumCode_UNSPECIFIED           CommunicationMediumCode_Value = 1
	CommunicationMediumCode_TELEPHONE             CommunicationMediumCode_Value = 2
	CommunicationMediumCode_FAX                   CommunicationMediumCode_Value = 3
	CommunicationMediumCode_DEVICE                CommunicationMediumCode_Value = 4
	CommunicationMediumCode_VIDEO                 CommunicationMediumCode_Value = 5
	CommunicationMediumCode_VOICEMAIL             CommunicationMediumCode_Value = 6
	CommunicationMediumCode_TEXT                  CommunicationMediumCode_Value = 7
	CommunicationMediumCode_SOCIAL_MEDIA          CommunicationMediumCode_Value = 8
	CommunicationMediumCode_IN_PERSON             CommunicationMediumCode_Value = 9
	CommunicationMediumCode_MAIL                  CommunicationMediumCode_Value = 10
	CommunicationMediumCode_EMAIL                 CommunicationMediumCode_Value = 11
	CommunicationMediumCode_PORTAL                CommunicationMediumCode_Value = 12
)

// Enum value maps for CommunicationMediumCode_Value.
var (
	CommunicationMediumCode_Value_name = map[int32]string{
		0:  "INVALID_UNINITIALIZED",
		1:  "UNSPECIFIED",
		2:  "TELEPHONE",
		3:  "FAX",
		4:  "DEVICE",
		5:  "VIDEO",
		6:  "VOICEMAIL",
		7:  "TEXT",
		8:  "SOCIAL_MEDIA",
		9:  "IN_PERSON",
		10: "MAIL",
		11: "EMAIL",
		12: "PORTAL",
	}
	CommunicationMediumCode_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"UNSPECIFIED":           1,
		"TELEPHONE":             2,
		"FAX":                   3,
		"DEVICE":                4,
		"VIDEO":                 5,
		"VOICEMAIL":             6,
		"TEXT":                  7,
		"SOCIAL_MEDIA":          8,
		"IN_PERSON":             9,
		"MAIL":                  10,
		"EMAIL":                 11,
		"PORTAL":                12,
	}
)

func (x CommunicationMediumCode_Value) Enum() *CommunicationMediumCode_Value {
	p := new(CommunicationMediumCode_Value)
	*p = x
	return p
}

func (x CommunicationMediumCode_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommunicationMediumCode_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[1].Descriptor()
}

func (CommunicationMediumCode_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[1]
}

func (x CommunicationMediumCode_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommunicationMediumCode_Value.Descriptor instead.
func (CommunicationMediumCode_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{1, 0}
}

type ConditionCriticalityCode_Value int32

const (
	ConditionCriticalityCode_INVALID_UNINITIALIZED    ConditionCriticalityCode_Value = 0
	ConditionCriticalityCode_UNSPECIFIED              ConditionCriticalityCode_Value = 1
	ConditionCriticalityCode_SELF_RESOLVING           ConditionCriticalityCode_Value = 2
	ConditionCriticalityCode_CONTROLLABLE             ConditionCriticalityCode_Value = 3
	ConditionCriticalityCode_FUNCTIONAL_LOSS          ConditionCriticalityCode_Value = 4
	ConditionCriticalityCode_LIFE_THREATENING         ConditionCriticalityCode_Value = 5
	ConditionCriticalityCode_REQUIRES_HOSPITALIZATION ConditionCriticalityCode_Value = 6
)

// Enum value maps for ConditionCriticalityCode_Value.
var (
	ConditionCriticalityCode_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "UNSPECIFIED",
		2: "SELF_RESOLVING",
		3: "CONTROLLABLE",
		4: "FUNCTIONAL_LOSS",
		5: "LIFE_THREATENING",
		6: "REQUIRES_HOSPITALIZATION",
	}
	ConditionCriticalityCode_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED":    0,
		"UNSPECIFIED":              1,
		"SELF_RESOLVING":           2,
		"CONTROLLABLE":             3,
		"FUNCTIONAL_LOSS":          4,
		"LIFE_THREATENING":         5,
		"REQUIRES_HOSPITALIZATION": 6,
	}
)

func (x ConditionCriticalityCode_Value) Enum() *ConditionCriticalityCode_Value {
	p := new(ConditionCriticalityCode_Value)
	*p = x
	return p
}

func (x ConditionCriticalityCode_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConditionCriticalityCode_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[2].Descriptor()
}

func (ConditionCriticalityCode_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[2]
}

func (x ConditionCriticalityCode_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConditionCriticalityCode_Value.Descriptor instead.
func (ConditionCriticalityCode_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{2, 0}
}

type DiagnosticOrderPreconditionCode_Value int32

const (
	DiagnosticOrderPreconditionCode_INVALID_UNINITIALIZED DiagnosticOrderPreconditionCode_Value = 0
	DiagnosticOrderPreconditionCode_AFTER_ACTIVITY        DiagnosticOrderPreconditionCode_Value = 1
	DiagnosticOrderPreconditionCode_AT_REST               DiagnosticOrderPreconditionCode_Value = 2
	DiagnosticOrderPreconditionCode_POST_OP               DiagnosticOrderPreconditionCode_Value = 3
)

// Enum value maps for DiagnosticOrderPreconditionCode_Value.
var (
	DiagnosticOrderPreconditionCode_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "AFTER_ACTIVITY",
		2: "AT_REST",
		3: "POST_OP",
	}
	DiagnosticOrderPreconditionCode_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"AFTER_ACTIVITY":        1,
		"AT_REST":               2,
		"POST_OP":               3,
	}
)

func (x DiagnosticOrderPreconditionCode_Value) Enum() *DiagnosticOrderPreconditionCode_Value {
	p := new(DiagnosticOrderPreconditionCode_Value)
	*p = x
	return p
}

func (x DiagnosticOrderPreconditionCode_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiagnosticOrderPreconditionCode_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[3].Descriptor()
}

func (DiagnosticOrderPreconditionCode_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[3]
}

func (x DiagnosticOrderPreconditionCode_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiagnosticOrderPreconditionCode_Value.Descriptor instead.
func (DiagnosticOrderPreconditionCode_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{3, 0}
}

type MilitaryServiceCode_Value int32

const (
	MilitaryServiceCode_INVALID_UNINITIALIZED MilitaryServiceCode_Value = 0
	MilitaryServiceCode_NOT_INDICATED         MilitaryServiceCode_Value = 1
	MilitaryServiceCode_NO_MILITARY_SERVICE   MilitaryServiceCode_Value = 2
	MilitaryServiceCode_VETERAN               MilitaryServiceCode_Value = 3
	MilitaryServiceCode_ACTIVE_DUTY           MilitaryServiceCode_Value = 4
	MilitaryServiceCode_ACTIVE_RESERVE        MilitaryServiceCode_Value = 5
	MilitaryServiceCode_INACTIVE_RESERVE      MilitaryServiceCode_Value = 6
)

// Enum value maps for MilitaryServiceCode_Value.
var (
	MilitaryServiceCode_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "NOT_INDICATED",
		2: "NO_MILITARY_SERVICE",
		3: "VETERAN",
		4: "ACTIVE_DUTY",
		5: "ACTIVE_RESERVE",
		6: "INACTIVE_RESERVE",
	}
	MilitaryServiceCode_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"NOT_INDICATED":         1,
		"NO_MILITARY_SERVICE":   2,
		"VETERAN":               3,
		"ACTIVE_DUTY":           4,
		"ACTIVE_RESERVE":        5,
		"INACTIVE_RESERVE":      6,
	}
)

func (x MilitaryServiceCode_Value) Enum() *MilitaryServiceCode_Value {
	p := new(MilitaryServiceCode_Value)
	*p = x
	return p
}

func (x MilitaryServiceCode_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MilitaryServiceCode_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[4].Descriptor()
}

func (MilitaryServiceCode_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[4]
}

func (x MilitaryServiceCode_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MilitaryServiceCode_Value.Descriptor instead.
func (MilitaryServiceCode_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{4, 0}
}

type ObservationVerificationCode_Value int32

const (
	ObservationVerificationCode_INVALID_UNINITIALIZED ObservationVerificationCode_Value = 0
	ObservationVerificationCode_HUMAN_REVIEW          ObservationVerificationCode_Value = 1
	ObservationVerificationCode_SLIDING_AVERAGE       ObservationVerificationCode_Value = 2
)

// Enum value maps for ObservationVerificationCode_Value.
var (
	ObservationVerificationCode_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "HUMAN_REVIEW",
		2: "SLIDING_AVERAGE",
	}
	ObservationVerificationCode_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"HUMAN_REVIEW":          1,
		"SLIDING_AVERAGE":       2,
	}
)

func (x ObservationVerificationCode_Value) Enum() *ObservationVerificationCode_Value {
	p := new(ObservationVerificationCode_Value)
	*p = x
	return p
}

func (x ObservationVerificationCode_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObservationVerificationCode_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[5].Descriptor()
}

func (ObservationVerificationCode_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[5]
}

func (x ObservationVerificationCode_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObservationVerificationCode_Value.Descriptor instead.
func (ObservationVerificationCode_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{5, 0}
}

type QICoreEncounterCanceledReasonValueSet_Value int32

const (
	QICoreEncounterCanceledReasonValueSet_INVALID_UNINITIALIZED QICoreEncounterCanceledReasonValueSet_Value = 0
	QICoreEncounterCanceledReasonValueSet_BLK                   QICoreEncounterCanceledReasonValueSet_Value = 1
	QICoreEncounterCanceledReasonValueSet_DEC                   QICoreEncounterCanceledReasonValueSet_Value = 2
	QICoreEncounterCanceledReasonValueSet_FIN                   QICoreEncounterCanceledReasonValueSet_Value = 3
	QICoreEncounterCanceledReasonValueSet_MED                   QICoreEncounterCanceledReasonValueSet_Value = 4
	QICoreEncounterCanceledReasonValueSet_ALTD                  QICoreEncounterCanceledReasonValueSet_Value = 5
)

// Enum value maps for QICoreEncounterCanceledReasonValueSet_Value.
var (
	QICoreEncounterCanceledReasonValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "BLK",
		2: "DEC",
		3: "FIN",
		4: "MED",
		5: "ALTD",
	}
	QICoreEncounterCanceledReasonValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"BLK":                   1,
		"DEC":                   2,
		"FIN":                   3,
		"MED":                   4,
		"ALTD":                  5,
	}
)

func (x QICoreEncounterCanceledReasonValueSet_Value) Enum() *QICoreEncounterCanceledReasonValueSet_Value {
	p := new(QICoreEncounterCanceledReasonValueSet_Value)
	*p = x
	return p
}

func (x QICoreEncounterCanceledReasonValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QICoreEncounterCanceledReasonValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[6].Descriptor()
}

func (QICoreEncounterCanceledReasonValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[6]
}

func (x QICoreEncounterCanceledReasonValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QICoreEncounterCanceledReasonValueSet_Value.Descriptor instead.
func (QICoreEncounterCanceledReasonValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{6, 0}
}

type QICoreGoalReasonRejectedValueSet_Value int32

const (
	QICoreGoalReasonRejectedValueSet_INVALID_UNINITIALIZED QICoreGoalReasonRejectedValueSet_Value = 0
	QICoreGoalReasonRejectedValueSet_BLK                   QICoreGoalReasonRejectedValueSet_Value = 1
	QICoreGoalReasonRejectedValueSet_DEC                   QICoreGoalReasonRejectedValueSet_Value = 2
	QICoreGoalReasonRejectedValueSet_FIN                   QICoreGoalReasonRejectedValueSet_Value = 3
	QICoreGoalReasonRejectedValueSet_MED                   QICoreGoalReasonRejectedValueSet_Value = 4
	QICoreGoalReasonRejectedValueSet_ALTD                  QICoreGoalReasonRejectedValueSet_Value = 5
)

// Enum value maps for QICoreGoalReasonRejectedValueSet_Value.
var (
	QICoreGoalReasonRejectedValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "BLK",
		2: "DEC",
		3: "FIN",
		4: "MED",
		5: "ALTD",
	}
	QICoreGoalReasonRejectedValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"BLK":                   1,
		"DEC":                   2,
		"FIN":                   3,
		"MED":                   4,
		"ALTD":                  5,
	}
)

func (x QICoreGoalReasonRejectedValueSet_Value) Enum() *QICoreGoalReasonRejectedValueSet_Value {
	p := new(QICoreGoalReasonRejectedValueSet_Value)
	*p = x
	return p
}

func (x QICoreGoalReasonRejectedValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QICoreGoalReasonRejectedValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[7].Descriptor()
}

func (QICoreGoalReasonRejectedValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[7]
}

func (x QICoreGoalReasonRejectedValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QICoreGoalReasonRejectedValueSet_Value.Descriptor instead.
func (QICoreGoalReasonRejectedValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{7, 0}
}

type QICoreMilitaryServiceValueSet_Value int32

const (
	QICoreMilitaryServiceValueSet_INVALID_UNINITIALIZED QICoreMilitaryServiceValueSet_Value = 0
	QICoreMilitaryServiceValueSet_NOT_INDICATED         QICoreMilitaryServiceValueSet_Value = 1
	QICoreMilitaryServiceValueSet_NO_MILITARY_SERVICE   QICoreMilitaryServiceValueSet_Value = 2
	QICoreMilitaryServiceValueSet_VETERAN               QICoreMilitaryServiceValueSet_Value = 3
	QICoreMilitaryServiceValueSet_ACTIVE_DUTY           QICoreMilitaryServiceValueSet_Value = 4
	QICoreMilitaryServiceValueSet_ACTIVE_RESERVE        QICoreMilitaryServiceValueSet_Value = 5
	QICoreMilitaryServiceValueSet_INACTIVE_RESERVE      QICoreMilitaryServiceValueSet_Value = 6
)

// Enum value maps for QICoreMilitaryServiceValueSet_Value.
var (
	QICoreMilitaryServiceValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "NOT_INDICATED",
		2: "NO_MILITARY_SERVICE",
		3: "VETERAN",
		4: "ACTIVE_DUTY",
		5: "ACTIVE_RESERVE",
		6: "INACTIVE_RESERVE",
	}
	QICoreMilitaryServiceValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"NOT_INDICATED":         1,
		"NO_MILITARY_SERVICE":   2,
		"VETERAN":               3,
		"ACTIVE_DUTY":           4,
		"ACTIVE_RESERVE":        5,
		"INACTIVE_RESERVE":      6,
	}
)

func (x QICoreMilitaryServiceValueSet_Value) Enum() *QICoreMilitaryServiceValueSet_Value {
	p := new(QICoreMilitaryServiceValueSet_Value)
	*p = x
	return p
}

func (x QICoreMilitaryServiceValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QICoreMilitaryServiceValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[8].Descriptor()
}

func (QICoreMilitaryServiceValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[8]
}

func (x QICoreMilitaryServiceValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QICoreMilitaryServiceValueSet_Value.Descriptor instead.
func (QICoreMilitaryServiceValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{8, 0}
}

type QICoreObservationDeltaValueSet_Value int32

const (
	QICoreObservationDeltaValueSet_INVALID_UNINITIALIZED QICoreObservationDeltaValueSet_Value = 0
	QICoreObservationDeltaValueSet_B                     QICoreObservationDeltaValueSet_Value = 1
	QICoreObservationDeltaValueSet_D                     QICoreObservationDeltaValueSet_Value = 2
	QICoreObservationDeltaValueSet_U                     QICoreObservationDeltaValueSet_Value = 3
	QICoreObservationDeltaValueSet_W                     QICoreObservationDeltaValueSet_Value = 4
)

// Enum value maps for QICoreObservationDeltaValueSet_Value.
var (
	QICoreObservationDeltaValueSet_Value_name = map[int32]string{
		0: "INVALID_UNINITIALIZED",
		1: "B",
		2: "D",
		3: "U",
		4: "W",
	}
	QICoreObservationDeltaValueSet_Value_value = map[string]int32{
		"INVALID_UNINITIALIZED": 0,
		"B":                     1,
		"D":                     2,
		"U":                     3,
		"W":                     4,
	}
)

func (x QICoreObservationDeltaValueSet_Value) Enum() *QICoreObservationDeltaValueSet_Value {
	p := new(QICoreObservationDeltaValueSet_Value)
	*p = x
	return p
}

func (x QICoreObservationDeltaValueSet_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QICoreObservationDeltaValueSet_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[9].Descriptor()
}

func (QICoreObservationDeltaValueSet_Value) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes[9]
}

func (x QICoreObservationDeltaValueSet_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QICoreObservationDeltaValueSet_Value.Descriptor instead.
func (QICoreObservationDeltaValueSet_Value) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{9, 0}
}

// The RAND scoring for appropriateness of the procedure.
// See http://hl7.org/fhir/us/qicore/CodeSystem/appropriateness-score
type AppropriatenessScoreCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AppropriatenessScoreCode) Reset() {
	*x = AppropriatenessScoreCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppropriatenessScoreCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppropriatenessScoreCode) ProtoMessage() {}

func (x *AppropriatenessScoreCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppropriatenessScoreCode.ProtoReflect.Descriptor instead.
func (*AppropriatenessScoreCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{0}
}

// Value Set for QICore Communication Medium (Example)
// See http://hl7.org/fhir/us/qicore/CodeSystem/communication-medium
type CommunicationMediumCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommunicationMediumCode) Reset() {
	*x = CommunicationMediumCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommunicationMediumCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommunicationMediumCode) ProtoMessage() {}

func (x *CommunicationMediumCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommunicationMediumCode.ProtoReflect.Descriptor instead.
func (*CommunicationMediumCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{1}
}

// Value Set for QICore Condition Criticality (Example)
// See http://hl7.org/fhir/us/qicore/CodeSystem/condition-criticality
type ConditionCriticalityCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConditionCriticalityCode) Reset() {
	*x = ConditionCriticalityCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConditionCriticalityCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionCriticalityCode) ProtoMessage() {}

func (x *ConditionCriticalityCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionCriticalityCode.ProtoReflect.Descriptor instead.
func (*ConditionCriticalityCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{2}
}

// The condition, state, or problem that the patient is in or has prior to a
// therapy or procedure. This captures temporal (temporary circumstances) that
// have bearing on the data that it qualifies but will not necessarily modify
// its meaning. Things like 'after activity', 'at rest', or 'post-op'. See
// http://hl7.org/fhir/us/qicore/CodeSystem/diagnosticorder-precondition
type DiagnosticOrderPreconditionCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DiagnosticOrderPreconditionCode) Reset() {
	*x = DiagnosticOrderPreconditionCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiagnosticOrderPreconditionCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnosticOrderPreconditionCode) ProtoMessage() {}

func (x *DiagnosticOrderPreconditionCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnosticOrderPreconditionCode.ProtoReflect.Descriptor instead.
func (*DiagnosticOrderPreconditionCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{3}
}

// Military service status codes
// See http://hl7.org/fhir/us/qicore/CodeSystem/military-service
type MilitaryServiceCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MilitaryServiceCode) Reset() {
	*x = MilitaryServiceCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MilitaryServiceCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MilitaryServiceCode) ProtoMessage() {}

func (x *MilitaryServiceCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MilitaryServiceCode.ProtoReflect.Descriptor instead.
func (*MilitaryServiceCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{4}
}

// Code for method by which the observation result was validated, e.g., human
// review, sliding average. See
// http://hl7.org/fhir/us/qicore/CodeSystem/observation-verification
type ObservationVerificationCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ObservationVerificationCode) Reset() {
	*x = ObservationVerificationCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObservationVerificationCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObservationVerificationCode) ProtoMessage() {}

func (x *ObservationVerificationCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObservationVerificationCode.ProtoReflect.Descriptor instead.
func (*ObservationVerificationCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{5}
}

// The value set to instantiate this attribute should be drawn from a
// terminologically robust code system that consists of or contains concepts to
// support the encounter process, in particular the process and reasons for
// canceling or refusing an encounter. This value set is provided as a
// suggestive example See
// http://hl7.org/fhir/us/qicore/ValueSet/qicore-encounter-canceled-reason
type QICoreEncounterCanceledReasonValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QICoreEncounterCanceledReasonValueSet) Reset() {
	*x = QICoreEncounterCanceledReasonValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QICoreEncounterCanceledReasonValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QICoreEncounterCanceledReasonValueSet) ProtoMessage() {}

func (x *QICoreEncounterCanceledReasonValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QICoreEncounterCanceledReasonValueSet.ProtoReflect.Descriptor instead.
func (*QICoreEncounterCanceledReasonValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{6}
}

// The value set to instantiate this attribute should be drawn from a
// terminologically robust code system that consists of or contains concepts to
// support the goal process, in particular the process and reasons for rejecting
// a goal. This value set is provided as a suggestive example. See
// http://hl7.org/fhir/us/qicore/ValueSet/qicore-goal-reason-rejected
type QICoreGoalReasonRejectedValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QICoreGoalReasonRejectedValueSet) Reset() {
	*x = QICoreGoalReasonRejectedValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QICoreGoalReasonRejectedValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QICoreGoalReasonRejectedValueSet) ProtoMessage() {}

func (x *QICoreGoalReasonRejectedValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QICoreGoalReasonRejectedValueSet.ProtoReflect.Descriptor instead.
func (*QICoreGoalReasonRejectedValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{7}
}

// Codes indicating status of current or former military service.
// See http://hl7.org/fhir/us/qicore/ValueSet/qicore-military-service
type QICoreMilitaryServiceValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QICoreMilitaryServiceValueSet) Reset() {
	*x = QICoreMilitaryServiceValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QICoreMilitaryServiceValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QICoreMilitaryServiceValueSet) ProtoMessage() {}

func (x *QICoreMilitaryServiceValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QICoreMilitaryServiceValueSet.ProtoReflect.Descriptor instead.
func (*QICoreMilitaryServiceValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{8}
}

// Code indicating how the current observation compares to previous observations
// - e.g., no change, rising trend, decreasing trend, etc... See
// http://hl7.org/fhir/us/qicore/ValueSet/qicore-observation-delta
type QICoreObservationDeltaValueSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QICoreObservationDeltaValueSet) Reset() {
	*x = QICoreObservationDeltaValueSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QICoreObservationDeltaValueSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QICoreObservationDeltaValueSet) ProtoMessage() {}

func (x *QICoreObservationDeltaValueSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QICoreObservationDeltaValueSet.ProtoReflect.Descriptor instead.
func (*QICoreObservationDeltaValueSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP(), []int{9}
}

var File_proto_google_fhir_proto_r4_qicore_codes_proto protoreflect.FileDescriptor

var file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x71, 0x69, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x15, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x71, 0x69, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xde, 0x02, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x70, 0x72, 0x69, 0x61, 0x74,
	0x65, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xc1,
	0x02, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x58, 0x54, 0x52, 0x45, 0x4d, 0x45, 0x4c, 0x59,
	0x5f, 0x49, 0x4e, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x50, 0x52, 0x49, 0x41, 0x54, 0x45, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x50, 0x52, 0x49, 0x41, 0x54,
	0x45, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f, 0x42, 0x41, 0x42, 0x4c, 0x59, 0x5f,
	0x49, 0x4e, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x50, 0x52, 0x49, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12,
	0x1b, 0x0a, 0x17, 0x55, 0x4e, 0x43, 0x45, 0x52, 0x54, 0x41, 0x49, 0x4e, 0x5f, 0x49, 0x4e, 0x41,
	0x50, 0x50, 0x52, 0x4f, 0x50, 0x52, 0x49, 0x41, 0x54, 0x45, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09,
	0x55, 0x4e, 0x43, 0x45, 0x52, 0x54, 0x41, 0x49, 0x4e, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x55,
	0x4e, 0x43, 0x45, 0x52, 0x54, 0x41, 0x49, 0x4e, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x50, 0x52,
	0x49, 0x41, 0x54, 0x45, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x4f, 0x42, 0x41, 0x42,
	0x4c, 0x59, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x50, 0x52, 0x49, 0x41, 0x54, 0x45, 0x10, 0x07,
	0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x50, 0x52, 0x49, 0x41, 0x54, 0x45, 0x10,
	0x08, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x58, 0x54, 0x52, 0x45, 0x4d, 0x45, 0x4c, 0x59, 0x5f, 0x41,
	0x50, 0x50, 0x52, 0x4f, 0x50, 0x52, 0x49, 0x41, 0x54, 0x45, 0x10, 0x09, 0x1a, 0x44, 0x8a, 0x91,
	0xc9, 0xfe, 0x07, 0x3e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x75, 0x73, 0x2f, 0x71, 0x69, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x70, 0x72, 0x69, 0x61, 0x74, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x2d, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x22, 0x9e, 0x02, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x82,
	0x02, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x45, 0x4c, 0x45, 0x50, 0x48, 0x4f, 0x4e,
	0x45, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x41, 0x58, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06,
	0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x49, 0x44, 0x45,
	0x4f, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x4d, 0x41, 0x49, 0x4c,
	0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c,
	0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x10, 0x08, 0x12, 0x0d,
	0x0a, 0x09, 0x49, 0x4e, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x10, 0x09, 0x12, 0x08, 0x0a,
	0x04, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x0a, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c,
	0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x4f, 0x52, 0x54, 0x41, 0x4c, 0x10, 0x0c, 0x1a, 0x43,
	0x8a, 0x91, 0xc9, 0xfe, 0x07, 0x3d, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x75, 0x73, 0x2f, 0x71, 0x69, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x6d, 0x65, 0x64,
	0x69, 0x75, 0x6d, 0x22, 0x85, 0x02, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0xe8, 0x01, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49,
	0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x45, 0x4c, 0x46, 0x5f, 0x52,
	0x45, 0x53, 0x4f, 0x4c, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f,
	0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x4c, 0x4f, 0x53, 0x53, 0x10,
	0x04, 0x12, 0x14, 0x0a, 0x10, 0x4c, 0x49, 0x46, 0x45, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45, 0x51, 0x55, 0x49,
	0x52, 0x45, 0x53, 0x5f, 0x48, 0x4f, 0x53, 0x50, 0x49, 0x54, 0x41, 0x4c, 0x49, 0x5a, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x06, 0x1a, 0x44, 0x8a, 0x91, 0xc9, 0xfe, 0x07, 0x3e, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x75, 0x73, 0x2f, 0x71, 0x69, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2d,
	0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0xdc, 0x01, 0x0a, 0x1f,
	0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0xb8, 0x01, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x0e, 0x41, 0x46, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x01, 0x1a, 0x07, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x01,
	0x31, 0x12, 0x14, 0x0a, 0x07, 0x41, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x10, 0x02, 0x1a, 0x07,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x01, 0x32, 0x12, 0x14, 0x0a, 0x07, 0x50, 0x4f, 0x53, 0x54, 0x5f,
	0x4f, 0x50, 0x10, 0x03, 0x1a, 0x07, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x01, 0x33, 0x1a, 0x4b, 0x8a,
	0x91, 0xc9, 0xfe, 0x07, 0x45, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x75, 0x73, 0x2f, 0x71, 0x69, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x64, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2d, 0x70, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xef, 0x01, 0x0a, 0x13, 0x4d,
	0x69, 0x6c, 0x69, 0x74, 0x61, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0xd7, 0x01, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41,
	0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x49,
	0x4e, 0x44, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4e, 0x4f,
	0x5f, 0x4d, 0x49, 0x4c, 0x49, 0x54, 0x41, 0x52, 0x59, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x56, 0x45, 0x54, 0x45, 0x52, 0x41, 0x4e, 0x10, 0x03,
	0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x44, 0x55, 0x54, 0x59, 0x10,
	0x04, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x45,
	0x52, 0x56, 0x45, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x10, 0x06, 0x1a, 0x3f, 0x8a, 0x91, 0xc9,
	0xfe, 0x07, 0x39, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x75, 0x73, 0x2f, 0x71, 0x69, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6d, 0x69, 0x6c, 0x69,
	0x74, 0x61, 0x72, 0x79, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xc4, 0x01, 0x0a,
	0x1b, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xa4, 0x01, 0x0a,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x19, 0x0a, 0x0c, 0x48, 0x55, 0x4d, 0x41, 0x4e, 0x5f, 0x52, 0x45, 0x56, 0x49, 0x45,
	0x57, 0x10, 0x01, 0x1a, 0x07, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x01, 0x31, 0x12, 0x1c, 0x0a, 0x0f,
	0x53, 0x4c, 0x49, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x56, 0x45, 0x52, 0x41, 0x47, 0x45, 0x10,
	0x02, 0x1a, 0x07, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x01, 0x32, 0x1a, 0x47, 0x8a, 0x91, 0xc9, 0xfe,
	0x07, 0x41, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x75, 0x73, 0x2f, 0x71, 0x69, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x99, 0x04, 0x0a, 0x25, 0x51, 0x49, 0x43, 0x6f, 0x72, 0x65, 0x45, 0x6e,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x22, 0xef, 0x03,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x4a, 0x0a, 0x03, 0x42, 0x4c, 0x4b, 0x10, 0x01, 0x1a, 0x41, 0xba, 0x96, 0xbb,
	0xb2, 0x05, 0x03, 0x42, 0x4c, 0x4b, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x32, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2f, 0x76, 0x33, 0x2d, 0x41, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x4a,
	0x0a, 0x03, 0x44, 0x45, 0x43, 0x10, 0x02, 0x1a, 0x41, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x03, 0x44,
	0x45, 0x43, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x32, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x33,
	0x2d, 0x41, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x03, 0x46, 0x49,
	0x4e, 0x10, 0x03, 0x1a, 0x41, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x03, 0x46, 0x49, 0x4e, 0xca, 0xdf,
	0xdb, 0x99, 0x08, 0x32, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43,
	0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x33, 0x2d, 0x41, 0x63, 0x74,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x03, 0x4d, 0x45, 0x44, 0x10, 0x04, 0x1a,
	0x41, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x03, 0x4d, 0x45, 0x44, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x32,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x33, 0x2d, 0x41, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x04, 0x41, 0x4c, 0x54, 0x44, 0x10, 0x05, 0x1a, 0x42, 0xba, 0x96,
	0xbb, 0xb2, 0x05, 0x04, 0x41, 0x4c, 0x54, 0x44, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x32, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
	0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2f, 0x76, 0x33, 0x2d, 0x41, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x1a, 0x4d, 0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x47, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x75, 0x73, 0x2f, 0x71,
	0x69, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x71,
	0x69, 0x63, 0x6f, 0x72, 0x65, 0x2d, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2d,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x2d, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x8f, 0x04, 0x0a, 0x20, 0x51, 0x49, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x53, 0x65, 0x74, 0x22, 0xea, 0x03, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19,
	0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54,
	0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x4a, 0x0a, 0x03, 0x42, 0x4c, 0x4b,
	0x10, 0x01, 0x1a, 0x41, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x03, 0x42, 0x4c, 0x4b, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x32, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43, 0x6f,
	0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x33, 0x2d, 0x41, 0x63, 0x74, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x03, 0x44, 0x45, 0x43, 0x10, 0x02, 0x1a, 0x41,
	0xba, 0x96, 0xbb, 0xb2, 0x05, 0x03, 0x44, 0x45, 0x43, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x32, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x33, 0x2d, 0x41, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x4a, 0x0a, 0x03, 0x46, 0x49, 0x4e, 0x10, 0x03, 0x1a, 0x41, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x03, 0x46, 0x49, 0x4e, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x32, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2f, 0x76, 0x33, 0x2d, 0x41, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x4a, 0x0a,
	0x03, 0x4d, 0x45, 0x44, 0x10, 0x04, 0x1a, 0x41, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x03, 0x4d, 0x45,
	0x44, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x32, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x33, 0x2d,
	0x41, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x04, 0x41, 0x4c, 0x54,
	0x44, 0x10, 0x05, 0x1a, 0x42, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x04, 0x41, 0x4c, 0x54, 0x44, 0xca,
	0xdf, 0xdb, 0x99, 0x08, 0x32, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x33, 0x2d, 0x41, 0x63,
	0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x1a, 0x48, 0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x42, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x75, 0x73, 0x2f, 0x71, 0x69, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x71, 0x69, 0x63, 0x6f, 0x72, 0x65, 0x2d, 0x67, 0x6f, 0x61,
	0x6c, 0x2d, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2d, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x22, 0x84, 0x05, 0x0a, 0x1d, 0x51, 0x49, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6c, 0x69,
	0x74, 0x61, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x53, 0x65, 0x74, 0x22, 0xe2, 0x04, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a,
	0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49,
	0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f,
	0x49, 0x4e, 0x44, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x1a, 0x3f, 0xca, 0xdf, 0xdb,
	0x99, 0x08, 0x39, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x75, 0x73, 0x2f, 0x71, 0x69, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6d, 0x69, 0x6c, 0x69,
	0x74, 0x61, 0x72, 0x79, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x13,
	0x4e, 0x4f, 0x5f, 0x4d, 0x49, 0x4c, 0x49, 0x54, 0x41, 0x52, 0x59, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x43, 0x45, 0x10, 0x02, 0x1a, 0x3f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x39, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x75, 0x73, 0x2f, 0x71, 0x69, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6d, 0x69, 0x6c, 0x69, 0x74, 0x61, 0x72, 0x79, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x07, 0x56, 0x45, 0x54, 0x45, 0x52, 0x41,
	0x4e, 0x10, 0x03, 0x1a, 0x3f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x39, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x75,
	0x73, 0x2f, 0x71, 0x69, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2f, 0x6d, 0x69, 0x6c, 0x69, 0x74, 0x61, 0x72, 0x79, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x44,
	0x55, 0x54, 0x59, 0x10, 0x04, 0x1a, 0x3f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x39, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x75, 0x73, 0x2f, 0x71, 0x69, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6d, 0x69, 0x6c, 0x69, 0x74, 0x61, 0x72, 0x79, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x5f, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x10, 0x05, 0x1a, 0x3f, 0xca, 0xdf, 0xdb, 0x99,
	0x08, 0x39, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x75, 0x73, 0x2f, 0x71, 0x69, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6d, 0x69, 0x6c, 0x69, 0x74,
	0x61, 0x72, 0x79, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x49,
	0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x10,
	0x06, 0x1a, 0x3f, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x39, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x75, 0x73, 0x2f,
	0x71, 0x69, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2f, 0x6d, 0x69, 0x6c, 0x69, 0x74, 0x61, 0x72, 0x79, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x1a, 0x44, 0xca, 0xa5, 0x9a, 0xa0, 0x08, 0x3e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x75, 0x73,
	0x2f, 0x71, 0x69, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74,
	0x2f, 0x71, 0x69, 0x63, 0x6f, 0x72, 0x65, 0x2d, 0x6d, 0x69, 0x6c, 0x69, 0x74, 0x61, 0x72, 0x79,
	0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x98, 0x03, 0x0a, 0x1e, 0x51, 0x49, 0x43,
	0x6f, 0x72, 0x65, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x22, 0xf5, 0x02, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x41, 0x0a, 0x01, 0x42, 0x10, 0x01, 0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x01, 0x42,
	0xca, 0xdf, 0xdb, 0x99, 0x08, 0x2d, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x32, 0x2d, 0x30,
	0x30, 0x37, 0x38, 0x12, 0x41, 0x0a, 0x01, 0x44, 0x10, 0x02, 0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2,
	0x05, 0x01, 0x44, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x2d, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76,
	0x32, 0x2d, 0x30, 0x30, 0x37, 0x38, 0x12, 0x41, 0x0a, 0x01, 0x55, 0x10, 0x03, 0x1a, 0x3a, 0xba,
	0x96, 0xbb, 0xb2, 0x05, 0x01, 0x55, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x2d, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x68,
	0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2f, 0x76, 0x32, 0x2d, 0x30, 0x30, 0x37, 0x38, 0x12, 0x41, 0x0a, 0x01, 0x57, 0x10, 0x04,
	0x1a, 0x3a, 0xba, 0x96, 0xbb, 0xb2, 0x05, 0x01, 0x57, 0xca, 0xdf, 0xdb, 0x99, 0x08, 0x2d, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x2e, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x32, 0x2d, 0x30, 0x30, 0x37, 0x38, 0x1a, 0x45, 0xca, 0xa5,
	0x9a, 0xa0, 0x08, 0x3f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x75, 0x73, 0x2f, 0x71, 0x69, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x71, 0x69, 0x63, 0x6f, 0x72,
	0x65, 0x2d, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x42, 0x69, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x71, 0x69, 0x63, 0x6f, 0x72, 0x65,
	0x50, 0x01, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x71, 0x69, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x63, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescOnce sync.Once
	file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescData = file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDesc
)

func file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescGZIP() []byte {
	file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescOnce.Do(func() {
		file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescData)
	})
	return file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDescData
}

var file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_google_fhir_proto_r4_qicore_codes_proto_goTypes = []interface{}{
	(AppropriatenessScoreCode_Value)(0),              // 0: google.fhir.r4.qicore.AppropriatenessScoreCode.Value
	(CommunicationMediumCode_Value)(0),               // 1: google.fhir.r4.qicore.CommunicationMediumCode.Value
	(ConditionCriticalityCode_Value)(0),              // 2: google.fhir.r4.qicore.ConditionCriticalityCode.Value
	(DiagnosticOrderPreconditionCode_Value)(0),       // 3: google.fhir.r4.qicore.DiagnosticOrderPreconditionCode.Value
	(MilitaryServiceCode_Value)(0),                   // 4: google.fhir.r4.qicore.MilitaryServiceCode.Value
	(ObservationVerificationCode_Value)(0),           // 5: google.fhir.r4.qicore.ObservationVerificationCode.Value
	(QICoreEncounterCanceledReasonValueSet_Value)(0), // 6: google.fhir.r4.qicore.QICoreEncounterCanceledReasonValueSet.Value
	(QICoreGoalReasonRejectedValueSet_Value)(0),      // 7: google.fhir.r4.qicore.QICoreGoalReasonRejectedValueSet.Value
	(QICoreMilitaryServiceValueSet_Value)(0),         // 8: google.fhir.r4.qicore.QICoreMilitaryServiceValueSet.Value
	(QICoreObservationDeltaValueSet_Value)(0),        // 9: google.fhir.r4.qicore.QICoreObservationDeltaValueSet.Value
	(*AppropriatenessScoreCode)(nil),                 // 10: google.fhir.r4.qicore.AppropriatenessScoreCode
	(*CommunicationMediumCode)(nil),                  // 11: google.fhir.r4.qicore.CommunicationMediumCode
	(*ConditionCriticalityCode)(nil),                 // 12: google.fhir.r4.qicore.ConditionCriticalityCode
	(*DiagnosticOrderPreconditionCode)(nil),          // 13: google.fhir.r4.qicore.DiagnosticOrderPreconditionCode
	(*MilitaryServiceCode)(nil),                      // 14: google.fhir.r4.qicore.MilitaryServiceCode
	(*ObservationVerificationCode)(nil),              // 15: google.fhir.r4.qicore.ObservationVerificationCode
	(*QICoreEncounterCanceledReasonValueSet)(nil),    // 16: google.fhir.r4.qicore.QICoreEncounterCanceledReasonValueSet
	(*QICoreGoalReasonRejectedValueSet)(nil),         // 17: google.fhir.r4.qicore.QICoreGoalReasonRejectedValueSet
	(*QICoreMilitaryServiceValueSet)(nil),            // 18: google.fhir.r4.qicore.QICoreMilitaryServiceValueSet
	(*QICoreObservationDeltaValueSet)(nil),           // 19: google.fhir.r4.qicore.QICoreObservationDeltaValueSet
}
var file_proto_google_fhir_proto_r4_qicore_codes_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_google_fhir_proto_r4_qicore_codes_proto_init() }
func file_proto_google_fhir_proto_r4_qicore_codes_proto_init() {
	if File_proto_google_fhir_proto_r4_qicore_codes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppropriatenessScoreCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommunicationMediumCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConditionCriticalityCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiagnosticOrderPreconditionCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MilitaryServiceCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObservationVerificationCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QICoreEncounterCanceledReasonValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QICoreGoalReasonRejectedValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QICoreMilitaryServiceValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QICoreObservationDeltaValueSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_google_fhir_proto_r4_qicore_codes_proto_goTypes,
		DependencyIndexes: file_proto_google_fhir_proto_r4_qicore_codes_proto_depIdxs,
		EnumInfos:         file_proto_google_fhir_proto_r4_qicore_codes_proto_enumTypes,
		MessageInfos:      file_proto_google_fhir_proto_r4_qicore_codes_proto_msgTypes,
	}.Build()
	File_proto_google_fhir_proto_r4_qicore_codes_proto = out.File
	file_proto_google_fhir_proto_r4_qicore_codes_proto_rawDesc = nil
	file_proto_google_fhir_proto_r4_qicore_codes_proto_goTypes = nil
	file_proto_google_fhir_proto_r4_qicore_codes_proto_depIdxs = nil
}
