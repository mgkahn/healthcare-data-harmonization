//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: proto/google/fhir/proto/r4/core/profiles/datatypes.proto

package datatypes_go_proto

import (
	_ "github.com/google/fhir/go/proto/google/fhir/proto/annotations_go_proto"
	codes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/codes_go_proto"
	datatypes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/datatypes_go_proto"
	extensions_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/extensions_go_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Auto-generated from StructureDefinition for DataElement constraint on
// ElementDefinition data type. Definition of an element in a resource or
// extension. See http://hl7.org/fhir/StructureDefinition/elementdefinition-de
type DataElementConstraintOnElementDefinitionDataType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Path of the element in the hierarchy of elements
	Path *datatypes_go_proto.String `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	// Name for this particular element (in a set of slices)
	SliceName *datatypes_go_proto.String `protobuf:"bytes,6,opt,name=slice_name,json=sliceName,proto3" json:"slice_name,omitempty"`
	// If this slice definition constrains an inherited slice definition (or not)
	SliceIsConstraining *datatypes_go_proto.Boolean `protobuf:"bytes,7,opt,name=slice_is_constraining,json=sliceIsConstraining,proto3" json:"slice_is_constraining,omitempty"`
	// Name for element to display with or prompt for element
	Label *datatypes_go_proto.String `protobuf:"bytes,8,opt,name=label,proto3" json:"label,omitempty"`
	// Corresponding codes in terminologies
	Code []*datatypes_go_proto.Coding `protobuf:"bytes,9,rep,name=code,proto3" json:"code,omitempty"`
	// Full formal definition as narrative text
	Definition *datatypes_go_proto.Markdown `protobuf:"bytes,12,opt,name=definition,proto3" json:"definition,omitempty"`
	// Comments about the use of this element
	Comment *datatypes_go_proto.Markdown `protobuf:"bytes,13,opt,name=comment,proto3" json:"comment,omitempty"`
	// Why this resource has been created
	Requirements *datatypes_go_proto.Markdown `protobuf:"bytes,14,opt,name=requirements,proto3" json:"requirements,omitempty"`
	// Other names
	Alias []*datatypes_go_proto.String `protobuf:"bytes,15,rep,name=alias,proto3" json:"alias,omitempty"`
	// Minimum Cardinality
	Min *datatypes_go_proto.UnsignedInt `protobuf:"bytes,16,opt,name=min,proto3" json:"min,omitempty"`
	// Maximum Cardinality (a number or *)
	Max          *datatypes_go_proto.String                                      `protobuf:"bytes,17,opt,name=max,proto3" json:"max,omitempty"`
	Base         *DataElementConstraintOnElementDefinitionDataType_Base          `protobuf:"bytes,18,opt,name=base,proto3" json:"base,omitempty"`
	Type         []*DataElementConstraintOnElementDefinitionDataType_TypeRef     `protobuf:"bytes,20,rep,name=type,proto3" json:"type,omitempty"`
	DefaultValue *DataElementConstraintOnElementDefinitionDataType_DefaultValueX `protobuf:"bytes,21,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// Implicit meaning when this element is missing
	MeaningWhenMissing *datatypes_go_proto.Markdown `protobuf:"bytes,22,opt,name=meaning_when_missing,json=meaningWhenMissing,proto3" json:"meaning_when_missing,omitempty"`
	// What the order of the elements means
	OrderMeaning *datatypes_go_proto.String                                  `protobuf:"bytes,23,opt,name=order_meaning,json=orderMeaning,proto3" json:"order_meaning,omitempty"`
	Example      []*DataElementConstraintOnElementDefinitionDataType_Example `protobuf:"bytes,26,rep,name=example,proto3" json:"example,omitempty"`
	MinValue     *DataElementConstraintOnElementDefinitionDataType_MinValueX `protobuf:"bytes,27,opt,name=min_value,json=minValue,proto3" json:"min_value,omitempty"`
	MaxValue     *DataElementConstraintOnElementDefinitionDataType_MaxValueX `protobuf:"bytes,28,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
	// Max length for strings
	MaxLength *datatypes_go_proto.Integer `protobuf:"bytes,29,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	// Reference to invariant about presence
	Condition  []*datatypes_go_proto.Id                                       `protobuf:"bytes,30,rep,name=condition,proto3" json:"condition,omitempty"`
	Constraint []*DataElementConstraintOnElementDefinitionDataType_Constraint `protobuf:"bytes,31,rep,name=constraint,proto3" json:"constraint,omitempty"`
	// If the element must be supported
	MustSupport *datatypes_go_proto.Boolean `protobuf:"bytes,32,opt,name=must_support,json=mustSupport,proto3" json:"must_support,omitempty"`
	// Reason that this element is marked as a modifier
	IsModifierReason *datatypes_go_proto.String                                                 `protobuf:"bytes,34,opt,name=is_modifier_reason,json=isModifierReason,proto3" json:"is_modifier_reason,omitempty"`
	Binding          *DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding `protobuf:"bytes,36,opt,name=binding,proto3" json:"binding,omitempty"`
	Mapping          []*DataElementConstraintOnElementDefinitionDataType_Mapping                `protobuf:"bytes,37,rep,name=mapping,proto3" json:"mapping,omitempty"`
	// Prompt for element phrased as question
	Question []*datatypes_go_proto.String `protobuf:"bytes,38,rep,name=question,json=Question,proto3" json:"question,omitempty"`
	// Units to use for measured value
	AllowedUnits *extensions_go_proto.ElementDefinitionAllowedUnits_ValueX `protobuf:"bytes,39,opt,name=allowed_units,json=AllowedUnits,proto3" json:"allowed_units,omitempty"`
}

func (x *DataElementConstraintOnElementDefinitionDataType) Reset() {
	*x = DataElementConstraintOnElementDefinitionDataType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataElementConstraintOnElementDefinitionDataType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataElementConstraintOnElementDefinitionDataType) ProtoMessage() {}

func (x *DataElementConstraintOnElementDefinitionDataType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataElementConstraintOnElementDefinitionDataType.ProtoReflect.Descriptor instead.
func (*DataElementConstraintOnElementDefinitionDataType) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescGZIP(), []int{0}
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetPath() *datatypes_go_proto.String {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetSliceName() *datatypes_go_proto.String {
	if x != nil {
		return x.SliceName
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetSliceIsConstraining() *datatypes_go_proto.Boolean {
	if x != nil {
		return x.SliceIsConstraining
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetLabel() *datatypes_go_proto.String {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetCode() []*datatypes_go_proto.Coding {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetDefinition() *datatypes_go_proto.Markdown {
	if x != nil {
		return x.Definition
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetComment() *datatypes_go_proto.Markdown {
	if x != nil {
		return x.Comment
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetRequirements() *datatypes_go_proto.Markdown {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetAlias() []*datatypes_go_proto.String {
	if x != nil {
		return x.Alias
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetMin() *datatypes_go_proto.UnsignedInt {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetMax() *datatypes_go_proto.String {
	if x != nil {
		return x.Max
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetBase() *DataElementConstraintOnElementDefinitionDataType_Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetType() []*DataElementConstraintOnElementDefinitionDataType_TypeRef {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetDefaultValue() *DataElementConstraintOnElementDefinitionDataType_DefaultValueX {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetMeaningWhenMissing() *datatypes_go_proto.Markdown {
	if x != nil {
		return x.MeaningWhenMissing
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetOrderMeaning() *datatypes_go_proto.String {
	if x != nil {
		return x.OrderMeaning
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetExample() []*DataElementConstraintOnElementDefinitionDataType_Example {
	if x != nil {
		return x.Example
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetMinValue() *DataElementConstraintOnElementDefinitionDataType_MinValueX {
	if x != nil {
		return x.MinValue
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetMaxValue() *DataElementConstraintOnElementDefinitionDataType_MaxValueX {
	if x != nil {
		return x.MaxValue
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetMaxLength() *datatypes_go_proto.Integer {
	if x != nil {
		return x.MaxLength
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetCondition() []*datatypes_go_proto.Id {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetConstraint() []*DataElementConstraintOnElementDefinitionDataType_Constraint {
	if x != nil {
		return x.Constraint
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetMustSupport() *datatypes_go_proto.Boolean {
	if x != nil {
		return x.MustSupport
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetIsModifierReason() *datatypes_go_proto.String {
	if x != nil {
		return x.IsModifierReason
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetBinding() *DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding {
	if x != nil {
		return x.Binding
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetMapping() []*DataElementConstraintOnElementDefinitionDataType_Mapping {
	if x != nil {
		return x.Mapping
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetQuestion() []*datatypes_go_proto.String {
	if x != nil {
		return x.Question
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType) GetAllowedUnits() *extensions_go_proto.ElementDefinitionAllowedUnits_ValueX {
	if x != nil {
		return x.AllowedUnits
	}
	return nil
}

// Base definition information for tools
type DataElementConstraintOnElementDefinitionDataType_Base struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Path that identifies the base element
	Path *datatypes_go_proto.String `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	// Min cardinality of the base element
	Min *datatypes_go_proto.UnsignedInt `protobuf:"bytes,4,opt,name=min,proto3" json:"min,omitempty"`
	// Max cardinality of the base element
	Max *datatypes_go_proto.String `protobuf:"bytes,5,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *DataElementConstraintOnElementDefinitionDataType_Base) Reset() {
	*x = DataElementConstraintOnElementDefinitionDataType_Base{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataElementConstraintOnElementDefinitionDataType_Base) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataElementConstraintOnElementDefinitionDataType_Base) ProtoMessage() {}

func (x *DataElementConstraintOnElementDefinitionDataType_Base) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataElementConstraintOnElementDefinitionDataType_Base.ProtoReflect.Descriptor instead.
func (*DataElementConstraintOnElementDefinitionDataType_Base) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescGZIP(), []int{0, 0}
}

func (x *DataElementConstraintOnElementDefinitionDataType_Base) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Base) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Base) GetPath() *datatypes_go_proto.String {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Base) GetMin() *datatypes_go_proto.UnsignedInt {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Base) GetMax() *datatypes_go_proto.String {
	if x != nil {
		return x.Max
	}
	return nil
}

// Data type and Profile for this element
type DataElementConstraintOnElementDefinitionDataType_TypeRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Data type or Resource (reference to definition)
	Code *datatypes_go_proto.Uri `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	// Profile (StructureDefinition or IG) on the Reference/canonical target -
	// one must apply
	TargetProfile []*datatypes_go_proto.Canonical                                          `protobuf:"bytes,5,rep,name=target_profile,json=targetProfile,proto3" json:"target_profile,omitempty"`
	Versioning    *DataElementConstraintOnElementDefinitionDataType_TypeRef_VersioningCode `protobuf:"bytes,7,opt,name=versioning,proto3" json:"versioning,omitempty"`
}

func (x *DataElementConstraintOnElementDefinitionDataType_TypeRef) Reset() {
	*x = DataElementConstraintOnElementDefinitionDataType_TypeRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataElementConstraintOnElementDefinitionDataType_TypeRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataElementConstraintOnElementDefinitionDataType_TypeRef) ProtoMessage() {}

func (x *DataElementConstraintOnElementDefinitionDataType_TypeRef) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataElementConstraintOnElementDefinitionDataType_TypeRef.ProtoReflect.Descriptor instead.
func (*DataElementConstraintOnElementDefinitionDataType_TypeRef) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescGZIP(), []int{0, 1}
}

func (x *DataElementConstraintOnElementDefinitionDataType_TypeRef) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_TypeRef) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_TypeRef) GetCode() *datatypes_go_proto.Uri {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_TypeRef) GetTargetProfile() []*datatypes_go_proto.Canonical {
	if x != nil {
		return x.TargetProfile
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_TypeRef) GetVersioning() *DataElementConstraintOnElementDefinitionDataType_TypeRef_VersioningCode {
	if x != nil {
		return x.Versioning
	}
	return nil
}

// Specified value if missing from instance
type DataElementConstraintOnElementDefinitionDataType_DefaultValueX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Base64Binary
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Boolean
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Canonical
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Code
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Date
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_DateTime
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Decimal
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Id
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Instant
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Integer
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Markdown
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Oid
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_PositiveInt
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_StringValue
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Time
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_UnsignedInt
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Uri
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Url
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Uuid
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Address
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Age
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Annotation
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Attachment
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_CodeableConcept
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Coding
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_ContactPoint
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Count
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Distance
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Duration
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_HumanName
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Identifier
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Money
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Period
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Quantity
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Range
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Ratio
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Reference
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_SampledData
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Signature
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Timing
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_ContactDetail
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Contributor
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_DataRequirement
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Expression
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_ParameterDefinition
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_RelatedArtifact
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_TriggerDefinition
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_UsageContext
	//	*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Dosage
	Choice isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice `protobuf_oneof:"choice"`
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) Reset() {
	*x = DataElementConstraintOnElementDefinitionDataType_DefaultValueX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX) ProtoMessage() {}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataElementConstraintOnElementDefinitionDataType_DefaultValueX.ProtoReflect.Descriptor instead.
func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescGZIP(), []int{0, 2}
}

func (m *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetChoice() isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetBase64Binary() *datatypes_go_proto.Base64Binary {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Base64Binary); ok {
		return x.Base64Binary
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetBoolean() *datatypes_go_proto.Boolean {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetCanonical() *datatypes_go_proto.Canonical {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Canonical); ok {
		return x.Canonical
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetCode() *datatypes_go_proto.Code {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Code); ok {
		return x.Code
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetDate() *datatypes_go_proto.Date {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Date); ok {
		return x.Date
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetDateTime() *datatypes_go_proto.DateTime {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetDecimal() *datatypes_go_proto.Decimal {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetId() *datatypes_go_proto.Id {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Id); ok {
		return x.Id
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetInstant() *datatypes_go_proto.Instant {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Instant); ok {
		return x.Instant
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetInteger() *datatypes_go_proto.Integer {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Integer); ok {
		return x.Integer
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetMarkdown() *datatypes_go_proto.Markdown {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Markdown); ok {
		return x.Markdown
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetOid() *datatypes_go_proto.Oid {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Oid); ok {
		return x.Oid
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetPositiveInt() *datatypes_go_proto.PositiveInt {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_PositiveInt); ok {
		return x.PositiveInt
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetStringValue() *datatypes_go_proto.String {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetTime() *datatypes_go_proto.Time {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Time); ok {
		return x.Time
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetUnsignedInt() *datatypes_go_proto.UnsignedInt {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_UnsignedInt); ok {
		return x.UnsignedInt
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetUri() *datatypes_go_proto.Uri {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Uri); ok {
		return x.Uri
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetUrl() *datatypes_go_proto.Url {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Url); ok {
		return x.Url
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetUuid() *datatypes_go_proto.Uuid {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Uuid); ok {
		return x.Uuid
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetAddress() *datatypes_go_proto.Address {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Address); ok {
		return x.Address
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetAge() *datatypes_go_proto.Age {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Age); ok {
		return x.Age
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetAnnotation() *datatypes_go_proto.Annotation {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Annotation); ok {
		return x.Annotation
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetAttachment() *datatypes_go_proto.Attachment {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetCodeableConcept() *datatypes_go_proto.CodeableConcept {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetCoding() *datatypes_go_proto.Coding {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Coding); ok {
		return x.Coding
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetContactPoint() *datatypes_go_proto.ContactPoint {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_ContactPoint); ok {
		return x.ContactPoint
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetCount() *datatypes_go_proto.Count {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Count); ok {
		return x.Count
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetDistance() *datatypes_go_proto.Distance {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Distance); ok {
		return x.Distance
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetDuration() *datatypes_go_proto.Duration {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Duration); ok {
		return x.Duration
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetHumanName() *datatypes_go_proto.HumanName {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_HumanName); ok {
		return x.HumanName
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetIdentifier() *datatypes_go_proto.Identifier {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Identifier); ok {
		return x.Identifier
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetMoney() *datatypes_go_proto.Money {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Money); ok {
		return x.Money
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetPeriod() *datatypes_go_proto.Period {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Period); ok {
		return x.Period
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetQuantity() *datatypes_go_proto.Quantity {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetRange() *datatypes_go_proto.Range {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Range); ok {
		return x.Range
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetRatio() *datatypes_go_proto.Ratio {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetReference() *datatypes_go_proto.Reference {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Reference); ok {
		return x.Reference
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetSampledData() *datatypes_go_proto.SampledData {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetSignature() *datatypes_go_proto.Signature {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Signature); ok {
		return x.Signature
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetTiming() *datatypes_go_proto.Timing {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Timing); ok {
		return x.Timing
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetContactDetail() *datatypes_go_proto.ContactDetail {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_ContactDetail); ok {
		return x.ContactDetail
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetContributor() *datatypes_go_proto.Contributor {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Contributor); ok {
		return x.Contributor
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetDataRequirement() *datatypes_go_proto.DataRequirement {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_DataRequirement); ok {
		return x.DataRequirement
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetExpression() *datatypes_go_proto.Expression {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Expression); ok {
		return x.Expression
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetParameterDefinition() *datatypes_go_proto.ParameterDefinition {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_ParameterDefinition); ok {
		return x.ParameterDefinition
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetRelatedArtifact() *datatypes_go_proto.RelatedArtifact {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_RelatedArtifact); ok {
		return x.RelatedArtifact
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetTriggerDefinition() *datatypes_go_proto.TriggerDefinition {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_TriggerDefinition); ok {
		return x.TriggerDefinition
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetUsageContext() *datatypes_go_proto.UsageContext {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_UsageContext); ok {
		return x.UsageContext
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_DefaultValueX) GetDosage() *datatypes_go_proto.Dosage {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Dosage); ok {
		return x.Dosage
	}
	return nil
}

type isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice interface {
	isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice()
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Base64Binary struct {
	Base64Binary *datatypes_go_proto.Base64Binary `protobuf:"bytes,1,opt,name=base64_binary,json=base64Binary,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Boolean struct {
	Boolean *datatypes_go_proto.Boolean `protobuf:"bytes,2,opt,name=boolean,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Canonical struct {
	Canonical *datatypes_go_proto.Canonical `protobuf:"bytes,3,opt,name=canonical,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Code struct {
	Code *datatypes_go_proto.Code `protobuf:"bytes,4,opt,name=code,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Date struct {
	Date *datatypes_go_proto.Date `protobuf:"bytes,5,opt,name=date,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_DateTime struct {
	DateTime *datatypes_go_proto.DateTime `protobuf:"bytes,6,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Decimal struct {
	Decimal *datatypes_go_proto.Decimal `protobuf:"bytes,7,opt,name=decimal,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Id struct {
	Id *datatypes_go_proto.Id `protobuf:"bytes,8,opt,name=id,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Instant struct {
	Instant *datatypes_go_proto.Instant `protobuf:"bytes,9,opt,name=instant,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Integer struct {
	Integer *datatypes_go_proto.Integer `protobuf:"bytes,10,opt,name=integer,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Markdown struct {
	Markdown *datatypes_go_proto.Markdown `protobuf:"bytes,11,opt,name=markdown,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Oid struct {
	Oid *datatypes_go_proto.Oid `protobuf:"bytes,12,opt,name=oid,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_PositiveInt struct {
	PositiveInt *datatypes_go_proto.PositiveInt `protobuf:"bytes,13,opt,name=positive_int,json=positiveInt,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_StringValue struct {
	StringValue *datatypes_go_proto.String `protobuf:"bytes,14,opt,name=string_value,json=string,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Time struct {
	Time *datatypes_go_proto.Time `protobuf:"bytes,15,opt,name=time,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_UnsignedInt struct {
	UnsignedInt *datatypes_go_proto.UnsignedInt `protobuf:"bytes,16,opt,name=unsigned_int,json=unsignedInt,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Uri struct {
	Uri *datatypes_go_proto.Uri `protobuf:"bytes,17,opt,name=uri,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Url struct {
	Url *datatypes_go_proto.Url `protobuf:"bytes,18,opt,name=url,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Uuid struct {
	Uuid *datatypes_go_proto.Uuid `protobuf:"bytes,19,opt,name=uuid,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Address struct {
	Address *datatypes_go_proto.Address `protobuf:"bytes,20,opt,name=address,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Age struct {
	Age *datatypes_go_proto.Age `protobuf:"bytes,21,opt,name=age,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Annotation struct {
	Annotation *datatypes_go_proto.Annotation `protobuf:"bytes,22,opt,name=annotation,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Attachment struct {
	Attachment *datatypes_go_proto.Attachment `protobuf:"bytes,23,opt,name=attachment,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_CodeableConcept struct {
	CodeableConcept *datatypes_go_proto.CodeableConcept `protobuf:"bytes,24,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Coding struct {
	Coding *datatypes_go_proto.Coding `protobuf:"bytes,25,opt,name=coding,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_ContactPoint struct {
	ContactPoint *datatypes_go_proto.ContactPoint `protobuf:"bytes,26,opt,name=contact_point,json=contactPoint,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Count struct {
	Count *datatypes_go_proto.Count `protobuf:"bytes,27,opt,name=count,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Distance struct {
	Distance *datatypes_go_proto.Distance `protobuf:"bytes,28,opt,name=distance,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Duration struct {
	Duration *datatypes_go_proto.Duration `protobuf:"bytes,29,opt,name=duration,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_HumanName struct {
	HumanName *datatypes_go_proto.HumanName `protobuf:"bytes,30,opt,name=human_name,json=humanName,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Identifier struct {
	Identifier *datatypes_go_proto.Identifier `protobuf:"bytes,31,opt,name=identifier,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Money struct {
	Money *datatypes_go_proto.Money `protobuf:"bytes,32,opt,name=money,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Period struct {
	Period *datatypes_go_proto.Period `protobuf:"bytes,33,opt,name=period,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Quantity struct {
	Quantity *datatypes_go_proto.Quantity `protobuf:"bytes,34,opt,name=quantity,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Range struct {
	Range *datatypes_go_proto.Range `protobuf:"bytes,35,opt,name=range,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Ratio struct {
	Ratio *datatypes_go_proto.Ratio `protobuf:"bytes,36,opt,name=ratio,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Reference struct {
	Reference *datatypes_go_proto.Reference `protobuf:"bytes,37,opt,name=reference,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_SampledData struct {
	SampledData *datatypes_go_proto.SampledData `protobuf:"bytes,38,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Signature struct {
	Signature *datatypes_go_proto.Signature `protobuf:"bytes,39,opt,name=signature,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Timing struct {
	Timing *datatypes_go_proto.Timing `protobuf:"bytes,40,opt,name=timing,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_ContactDetail struct {
	ContactDetail *datatypes_go_proto.ContactDetail `protobuf:"bytes,41,opt,name=contact_detail,json=contactDetail,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Contributor struct {
	Contributor *datatypes_go_proto.Contributor `protobuf:"bytes,42,opt,name=contributor,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_DataRequirement struct {
	DataRequirement *datatypes_go_proto.DataRequirement `protobuf:"bytes,43,opt,name=data_requirement,json=dataRequirement,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Expression struct {
	Expression *datatypes_go_proto.Expression `protobuf:"bytes,44,opt,name=expression,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_ParameterDefinition struct {
	ParameterDefinition *datatypes_go_proto.ParameterDefinition `protobuf:"bytes,45,opt,name=parameter_definition,json=parameterDefinition,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_RelatedArtifact struct {
	RelatedArtifact *datatypes_go_proto.RelatedArtifact `protobuf:"bytes,46,opt,name=related_artifact,json=relatedArtifact,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_TriggerDefinition struct {
	TriggerDefinition *datatypes_go_proto.TriggerDefinition `protobuf:"bytes,47,opt,name=trigger_definition,json=triggerDefinition,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_UsageContext struct {
	UsageContext *datatypes_go_proto.UsageContext `protobuf:"bytes,48,opt,name=usage_context,json=usageContext,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Dosage struct {
	Dosage *datatypes_go_proto.Dosage `protobuf:"bytes,49,opt,name=dosage,proto3,oneof"`
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Base64Binary) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Boolean) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Canonical) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Code) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Date) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_DateTime) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Decimal) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Id) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Instant) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Integer) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Markdown) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Oid) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_PositiveInt) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_StringValue) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Time) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_UnsignedInt) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Uri) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Url) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Uuid) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Address) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Age) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Annotation) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Attachment) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_CodeableConcept) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Coding) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_ContactPoint) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Count) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Distance) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Duration) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_HumanName) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Identifier) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Money) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Period) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Quantity) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Range) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Ratio) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Reference) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_SampledData) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Signature) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Timing) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_ContactDetail) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Contributor) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_DataRequirement) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Expression) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_ParameterDefinition) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_RelatedArtifact) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_TriggerDefinition) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_UsageContext) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Dosage) isDataElementConstraintOnElementDefinitionDataType_DefaultValueX_Choice() {
}

// Example value (as defined for type)
type DataElementConstraintOnElementDefinitionDataType_Example struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Describes the purpose of this example
	Label *datatypes_go_proto.String                                       `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Value *DataElementConstraintOnElementDefinitionDataType_Example_ValueX `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example) Reset() {
	*x = DataElementConstraintOnElementDefinitionDataType_Example{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataElementConstraintOnElementDefinitionDataType_Example) ProtoMessage() {}

func (x *DataElementConstraintOnElementDefinitionDataType_Example) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataElementConstraintOnElementDefinitionDataType_Example.ProtoReflect.Descriptor instead.
func (*DataElementConstraintOnElementDefinitionDataType_Example) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescGZIP(), []int{0, 3}
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example) GetLabel() *datatypes_go_proto.String {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example) GetValue() *DataElementConstraintOnElementDefinitionDataType_Example_ValueX {
	if x != nil {
		return x.Value
	}
	return nil
}

// Minimum Allowed Value (for some types)
type DataElementConstraintOnElementDefinitionDataType_MinValueX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*DataElementConstraintOnElementDefinitionDataType_MinValueX_Date
	//	*DataElementConstraintOnElementDefinitionDataType_MinValueX_DateTime
	//	*DataElementConstraintOnElementDefinitionDataType_MinValueX_Instant
	//	*DataElementConstraintOnElementDefinitionDataType_MinValueX_Time
	//	*DataElementConstraintOnElementDefinitionDataType_MinValueX_Decimal
	//	*DataElementConstraintOnElementDefinitionDataType_MinValueX_Integer
	//	*DataElementConstraintOnElementDefinitionDataType_MinValueX_PositiveInt
	//	*DataElementConstraintOnElementDefinitionDataType_MinValueX_UnsignedInt
	//	*DataElementConstraintOnElementDefinitionDataType_MinValueX_Quantity
	Choice isDataElementConstraintOnElementDefinitionDataType_MinValueX_Choice `protobuf_oneof:"choice"`
}

func (x *DataElementConstraintOnElementDefinitionDataType_MinValueX) Reset() {
	*x = DataElementConstraintOnElementDefinitionDataType_MinValueX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataElementConstraintOnElementDefinitionDataType_MinValueX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataElementConstraintOnElementDefinitionDataType_MinValueX) ProtoMessage() {}

func (x *DataElementConstraintOnElementDefinitionDataType_MinValueX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataElementConstraintOnElementDefinitionDataType_MinValueX.ProtoReflect.Descriptor instead.
func (*DataElementConstraintOnElementDefinitionDataType_MinValueX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescGZIP(), []int{0, 4}
}

func (m *DataElementConstraintOnElementDefinitionDataType_MinValueX) GetChoice() isDataElementConstraintOnElementDefinitionDataType_MinValueX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_MinValueX) GetDate() *datatypes_go_proto.Date {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_MinValueX_Date); ok {
		return x.Date
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_MinValueX) GetDateTime() *datatypes_go_proto.DateTime {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_MinValueX_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_MinValueX) GetInstant() *datatypes_go_proto.Instant {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_MinValueX_Instant); ok {
		return x.Instant
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_MinValueX) GetTime() *datatypes_go_proto.Time {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_MinValueX_Time); ok {
		return x.Time
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_MinValueX) GetDecimal() *datatypes_go_proto.Decimal {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_MinValueX_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_MinValueX) GetInteger() *datatypes_go_proto.Integer {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_MinValueX_Integer); ok {
		return x.Integer
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_MinValueX) GetPositiveInt() *datatypes_go_proto.PositiveInt {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_MinValueX_PositiveInt); ok {
		return x.PositiveInt
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_MinValueX) GetUnsignedInt() *datatypes_go_proto.UnsignedInt {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_MinValueX_UnsignedInt); ok {
		return x.UnsignedInt
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_MinValueX) GetQuantity() *datatypes_go_proto.Quantity {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_MinValueX_Quantity); ok {
		return x.Quantity
	}
	return nil
}

type isDataElementConstraintOnElementDefinitionDataType_MinValueX_Choice interface {
	isDataElementConstraintOnElementDefinitionDataType_MinValueX_Choice()
}

type DataElementConstraintOnElementDefinitionDataType_MinValueX_Date struct {
	Date *datatypes_go_proto.Date `protobuf:"bytes,1,opt,name=date,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_MinValueX_DateTime struct {
	DateTime *datatypes_go_proto.DateTime `protobuf:"bytes,2,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_MinValueX_Instant struct {
	Instant *datatypes_go_proto.Instant `protobuf:"bytes,3,opt,name=instant,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_MinValueX_Time struct {
	Time *datatypes_go_proto.Time `protobuf:"bytes,4,opt,name=time,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_MinValueX_Decimal struct {
	Decimal *datatypes_go_proto.Decimal `protobuf:"bytes,5,opt,name=decimal,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_MinValueX_Integer struct {
	Integer *datatypes_go_proto.Integer `protobuf:"bytes,6,opt,name=integer,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_MinValueX_PositiveInt struct {
	PositiveInt *datatypes_go_proto.PositiveInt `protobuf:"bytes,7,opt,name=positive_int,json=positiveInt,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_MinValueX_UnsignedInt struct {
	UnsignedInt *datatypes_go_proto.UnsignedInt `protobuf:"bytes,8,opt,name=unsigned_int,json=unsignedInt,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_MinValueX_Quantity struct {
	Quantity *datatypes_go_proto.Quantity `protobuf:"bytes,9,opt,name=quantity,proto3,oneof"`
}

func (*DataElementConstraintOnElementDefinitionDataType_MinValueX_Date) isDataElementConstraintOnElementDefinitionDataType_MinValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_MinValueX_DateTime) isDataElementConstraintOnElementDefinitionDataType_MinValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_MinValueX_Instant) isDataElementConstraintOnElementDefinitionDataType_MinValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_MinValueX_Time) isDataElementConstraintOnElementDefinitionDataType_MinValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_MinValueX_Decimal) isDataElementConstraintOnElementDefinitionDataType_MinValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_MinValueX_Integer) isDataElementConstraintOnElementDefinitionDataType_MinValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_MinValueX_PositiveInt) isDataElementConstraintOnElementDefinitionDataType_MinValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_MinValueX_UnsignedInt) isDataElementConstraintOnElementDefinitionDataType_MinValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_MinValueX_Quantity) isDataElementConstraintOnElementDefinitionDataType_MinValueX_Choice() {
}

// Maximum Allowed Value (for some types)
type DataElementConstraintOnElementDefinitionDataType_MaxValueX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Date
	//	*DataElementConstraintOnElementDefinitionDataType_MaxValueX_DateTime
	//	*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Instant
	//	*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Time
	//	*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Decimal
	//	*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Integer
	//	*DataElementConstraintOnElementDefinitionDataType_MaxValueX_PositiveInt
	//	*DataElementConstraintOnElementDefinitionDataType_MaxValueX_UnsignedInt
	//	*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Quantity
	Choice isDataElementConstraintOnElementDefinitionDataType_MaxValueX_Choice `protobuf_oneof:"choice"`
}

func (x *DataElementConstraintOnElementDefinitionDataType_MaxValueX) Reset() {
	*x = DataElementConstraintOnElementDefinitionDataType_MaxValueX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataElementConstraintOnElementDefinitionDataType_MaxValueX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataElementConstraintOnElementDefinitionDataType_MaxValueX) ProtoMessage() {}

func (x *DataElementConstraintOnElementDefinitionDataType_MaxValueX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataElementConstraintOnElementDefinitionDataType_MaxValueX.ProtoReflect.Descriptor instead.
func (*DataElementConstraintOnElementDefinitionDataType_MaxValueX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescGZIP(), []int{0, 5}
}

func (m *DataElementConstraintOnElementDefinitionDataType_MaxValueX) GetChoice() isDataElementConstraintOnElementDefinitionDataType_MaxValueX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_MaxValueX) GetDate() *datatypes_go_proto.Date {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Date); ok {
		return x.Date
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_MaxValueX) GetDateTime() *datatypes_go_proto.DateTime {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_MaxValueX_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_MaxValueX) GetInstant() *datatypes_go_proto.Instant {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Instant); ok {
		return x.Instant
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_MaxValueX) GetTime() *datatypes_go_proto.Time {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Time); ok {
		return x.Time
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_MaxValueX) GetDecimal() *datatypes_go_proto.Decimal {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_MaxValueX) GetInteger() *datatypes_go_proto.Integer {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Integer); ok {
		return x.Integer
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_MaxValueX) GetPositiveInt() *datatypes_go_proto.PositiveInt {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_MaxValueX_PositiveInt); ok {
		return x.PositiveInt
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_MaxValueX) GetUnsignedInt() *datatypes_go_proto.UnsignedInt {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_MaxValueX_UnsignedInt); ok {
		return x.UnsignedInt
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_MaxValueX) GetQuantity() *datatypes_go_proto.Quantity {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Quantity); ok {
		return x.Quantity
	}
	return nil
}

type isDataElementConstraintOnElementDefinitionDataType_MaxValueX_Choice interface {
	isDataElementConstraintOnElementDefinitionDataType_MaxValueX_Choice()
}

type DataElementConstraintOnElementDefinitionDataType_MaxValueX_Date struct {
	Date *datatypes_go_proto.Date `protobuf:"bytes,1,opt,name=date,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_MaxValueX_DateTime struct {
	DateTime *datatypes_go_proto.DateTime `protobuf:"bytes,2,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_MaxValueX_Instant struct {
	Instant *datatypes_go_proto.Instant `protobuf:"bytes,3,opt,name=instant,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_MaxValueX_Time struct {
	Time *datatypes_go_proto.Time `protobuf:"bytes,4,opt,name=time,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_MaxValueX_Decimal struct {
	Decimal *datatypes_go_proto.Decimal `protobuf:"bytes,5,opt,name=decimal,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_MaxValueX_Integer struct {
	Integer *datatypes_go_proto.Integer `protobuf:"bytes,6,opt,name=integer,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_MaxValueX_PositiveInt struct {
	PositiveInt *datatypes_go_proto.PositiveInt `protobuf:"bytes,7,opt,name=positive_int,json=positiveInt,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_MaxValueX_UnsignedInt struct {
	UnsignedInt *datatypes_go_proto.UnsignedInt `protobuf:"bytes,8,opt,name=unsigned_int,json=unsignedInt,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_MaxValueX_Quantity struct {
	Quantity *datatypes_go_proto.Quantity `protobuf:"bytes,9,opt,name=quantity,proto3,oneof"`
}

func (*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Date) isDataElementConstraintOnElementDefinitionDataType_MaxValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_MaxValueX_DateTime) isDataElementConstraintOnElementDefinitionDataType_MaxValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Instant) isDataElementConstraintOnElementDefinitionDataType_MaxValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Time) isDataElementConstraintOnElementDefinitionDataType_MaxValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Decimal) isDataElementConstraintOnElementDefinitionDataType_MaxValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Integer) isDataElementConstraintOnElementDefinitionDataType_MaxValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_MaxValueX_PositiveInt) isDataElementConstraintOnElementDefinitionDataType_MaxValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_MaxValueX_UnsignedInt) isDataElementConstraintOnElementDefinitionDataType_MaxValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Quantity) isDataElementConstraintOnElementDefinitionDataType_MaxValueX_Choice() {
}

// Condition that must evaluate to true
type DataElementConstraintOnElementDefinitionDataType_Constraint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Target of 'condition' reference above
	Key *datatypes_go_proto.Id `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	// Why this constraint is necessary or appropriate
	Requirements *datatypes_go_proto.String                                                `protobuf:"bytes,4,opt,name=requirements,proto3" json:"requirements,omitempty"`
	Severity     *DataElementConstraintOnElementDefinitionDataType_Constraint_SeverityCode `protobuf:"bytes,5,opt,name=severity,proto3" json:"severity,omitempty"`
	// Human description of constraint
	Human *datatypes_go_proto.String `protobuf:"bytes,6,opt,name=human,proto3" json:"human,omitempty"`
	// FHIRPath expression of constraint
	Expression *datatypes_go_proto.String `protobuf:"bytes,7,opt,name=expression,proto3" json:"expression,omitempty"`
	// XPath expression of constraint
	Xpath *datatypes_go_proto.String `protobuf:"bytes,8,opt,name=xpath,proto3" json:"xpath,omitempty"`
	// Reference to original source of constraint
	Source *datatypes_go_proto.Canonical `protobuf:"bytes,9,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *DataElementConstraintOnElementDefinitionDataType_Constraint) Reset() {
	*x = DataElementConstraintOnElementDefinitionDataType_Constraint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataElementConstraintOnElementDefinitionDataType_Constraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataElementConstraintOnElementDefinitionDataType_Constraint) ProtoMessage() {}

func (x *DataElementConstraintOnElementDefinitionDataType_Constraint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataElementConstraintOnElementDefinitionDataType_Constraint.ProtoReflect.Descriptor instead.
func (*DataElementConstraintOnElementDefinitionDataType_Constraint) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescGZIP(), []int{0, 6}
}

func (x *DataElementConstraintOnElementDefinitionDataType_Constraint) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Constraint) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Constraint) GetKey() *datatypes_go_proto.Id {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Constraint) GetRequirements() *datatypes_go_proto.String {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Constraint) GetSeverity() *DataElementConstraintOnElementDefinitionDataType_Constraint_SeverityCode {
	if x != nil {
		return x.Severity
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Constraint) GetHuman() *datatypes_go_proto.String {
	if x != nil {
		return x.Human
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Constraint) GetExpression() *datatypes_go_proto.String {
	if x != nil {
		return x.Expression
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Constraint) GetXpath() *datatypes_go_proto.String {
	if x != nil {
		return x.Xpath
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Constraint) GetSource() *datatypes_go_proto.Canonical {
	if x != nil {
		return x.Source
	}
	return nil
}

// ValueSet details if this is coded
type DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension                                                         `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	Strength  *DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding_StrengthCode `protobuf:"bytes,3,opt,name=strength,proto3" json:"strength,omitempty"`
	// Human explanation of the value set
	Description *datatypes_go_proto.String `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Source of value set
	ValueSet *datatypes_go_proto.Canonical `protobuf:"bytes,5,opt,name=value_set,json=valueSet,proto3" json:"value_set,omitempty"`
}

func (x *DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding) Reset() {
	*x = DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding) ProtoMessage() {}

func (x *DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding.ProtoReflect.Descriptor instead.
func (*DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescGZIP(), []int{0, 7}
}

func (x *DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding) GetStrength() *DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding_StrengthCode {
	if x != nil {
		return x.Strength
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding) GetDescription() *datatypes_go_proto.String {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding) GetValueSet() *datatypes_go_proto.Canonical {
	if x != nil {
		return x.ValueSet
	}
	return nil
}

// Map element to another set of definitions
type DataElementConstraintOnElementDefinitionDataType_Mapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Reference to mapping declaration
	Identity *datatypes_go_proto.Id                                                 `protobuf:"bytes,3,opt,name=identity,proto3" json:"identity,omitempty"`
	Language *DataElementConstraintOnElementDefinitionDataType_Mapping_LanguageCode `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Details of the mapping
	Map *datatypes_go_proto.String `protobuf:"bytes,5,opt,name=map,proto3" json:"map,omitempty"`
	// Comments about the mapping or its use
	Comment *datatypes_go_proto.String `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *DataElementConstraintOnElementDefinitionDataType_Mapping) Reset() {
	*x = DataElementConstraintOnElementDefinitionDataType_Mapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataElementConstraintOnElementDefinitionDataType_Mapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataElementConstraintOnElementDefinitionDataType_Mapping) ProtoMessage() {}

func (x *DataElementConstraintOnElementDefinitionDataType_Mapping) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataElementConstraintOnElementDefinitionDataType_Mapping.ProtoReflect.Descriptor instead.
func (*DataElementConstraintOnElementDefinitionDataType_Mapping) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescGZIP(), []int{0, 8}
}

func (x *DataElementConstraintOnElementDefinitionDataType_Mapping) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Mapping) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Mapping) GetIdentity() *datatypes_go_proto.Id {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Mapping) GetLanguage() *DataElementConstraintOnElementDefinitionDataType_Mapping_LanguageCode {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Mapping) GetMap() *datatypes_go_proto.String {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Mapping) GetComment() *datatypes_go_proto.String {
	if x != nil {
		return x.Comment
	}
	return nil
}

// either | independent | specific
type DataElementConstraintOnElementDefinitionDataType_TypeRef_VersioningCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.ReferenceVersionRulesCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.ReferenceVersionRulesCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                     `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension                `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *DataElementConstraintOnElementDefinitionDataType_TypeRef_VersioningCode) Reset() {
	*x = DataElementConstraintOnElementDefinitionDataType_TypeRef_VersioningCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataElementConstraintOnElementDefinitionDataType_TypeRef_VersioningCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataElementConstraintOnElementDefinitionDataType_TypeRef_VersioningCode) ProtoMessage() {}

func (x *DataElementConstraintOnElementDefinitionDataType_TypeRef_VersioningCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataElementConstraintOnElementDefinitionDataType_TypeRef_VersioningCode.ProtoReflect.Descriptor instead.
func (*DataElementConstraintOnElementDefinitionDataType_TypeRef_VersioningCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *DataElementConstraintOnElementDefinitionDataType_TypeRef_VersioningCode) GetValue() codes_go_proto.ReferenceVersionRulesCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.ReferenceVersionRulesCode_INVALID_UNINITIALIZED
}

func (x *DataElementConstraintOnElementDefinitionDataType_TypeRef_VersioningCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_TypeRef_VersioningCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// Value of Example (one of allowed types)
type DataElementConstraintOnElementDefinitionDataType_Example_ValueX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Base64Binary
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Boolean
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Canonical
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Code
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Date
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_DateTime
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Decimal
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Id
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Instant
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Integer
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Markdown
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Oid
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_PositiveInt
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_StringValue
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Time
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_UnsignedInt
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Uri
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Url
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Uuid
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Address
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Age
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Annotation
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Attachment
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_CodeableConcept
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Coding
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_ContactPoint
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Count
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Distance
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Duration
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_HumanName
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Identifier
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Money
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Period
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Quantity
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Range
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Ratio
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Reference
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_SampledData
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Signature
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Timing
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_ContactDetail
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Contributor
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_DataRequirement
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Expression
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_ParameterDefinition
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_RelatedArtifact
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_TriggerDefinition
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_UsageContext
	//	*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Dosage
	Choice isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice `protobuf_oneof:"choice"`
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) Reset() {
	*x = DataElementConstraintOnElementDefinitionDataType_Example_ValueX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX) ProtoMessage() {}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataElementConstraintOnElementDefinitionDataType_Example_ValueX.ProtoReflect.Descriptor instead.
func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (m *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetChoice() isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetBase64Binary() *datatypes_go_proto.Base64Binary {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Base64Binary); ok {
		return x.Base64Binary
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetBoolean() *datatypes_go_proto.Boolean {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetCanonical() *datatypes_go_proto.Canonical {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Canonical); ok {
		return x.Canonical
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetCode() *datatypes_go_proto.Code {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Code); ok {
		return x.Code
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetDate() *datatypes_go_proto.Date {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Date); ok {
		return x.Date
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetDateTime() *datatypes_go_proto.DateTime {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetDecimal() *datatypes_go_proto.Decimal {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetId() *datatypes_go_proto.Id {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Id); ok {
		return x.Id
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetInstant() *datatypes_go_proto.Instant {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Instant); ok {
		return x.Instant
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetInteger() *datatypes_go_proto.Integer {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Integer); ok {
		return x.Integer
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetMarkdown() *datatypes_go_proto.Markdown {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Markdown); ok {
		return x.Markdown
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetOid() *datatypes_go_proto.Oid {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Oid); ok {
		return x.Oid
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetPositiveInt() *datatypes_go_proto.PositiveInt {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_PositiveInt); ok {
		return x.PositiveInt
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetStringValue() *datatypes_go_proto.String {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetTime() *datatypes_go_proto.Time {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Time); ok {
		return x.Time
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetUnsignedInt() *datatypes_go_proto.UnsignedInt {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_UnsignedInt); ok {
		return x.UnsignedInt
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetUri() *datatypes_go_proto.Uri {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Uri); ok {
		return x.Uri
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetUrl() *datatypes_go_proto.Url {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Url); ok {
		return x.Url
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetUuid() *datatypes_go_proto.Uuid {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Uuid); ok {
		return x.Uuid
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetAddress() *datatypes_go_proto.Address {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Address); ok {
		return x.Address
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetAge() *datatypes_go_proto.Age {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Age); ok {
		return x.Age
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetAnnotation() *datatypes_go_proto.Annotation {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Annotation); ok {
		return x.Annotation
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetAttachment() *datatypes_go_proto.Attachment {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetCodeableConcept() *datatypes_go_proto.CodeableConcept {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetCoding() *datatypes_go_proto.Coding {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Coding); ok {
		return x.Coding
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetContactPoint() *datatypes_go_proto.ContactPoint {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_ContactPoint); ok {
		return x.ContactPoint
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetCount() *datatypes_go_proto.Count {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Count); ok {
		return x.Count
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetDistance() *datatypes_go_proto.Distance {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Distance); ok {
		return x.Distance
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetDuration() *datatypes_go_proto.Duration {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Duration); ok {
		return x.Duration
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetHumanName() *datatypes_go_proto.HumanName {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_HumanName); ok {
		return x.HumanName
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetIdentifier() *datatypes_go_proto.Identifier {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Identifier); ok {
		return x.Identifier
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetMoney() *datatypes_go_proto.Money {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Money); ok {
		return x.Money
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetPeriod() *datatypes_go_proto.Period {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Period); ok {
		return x.Period
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetQuantity() *datatypes_go_proto.Quantity {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetRange() *datatypes_go_proto.Range {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Range); ok {
		return x.Range
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetRatio() *datatypes_go_proto.Ratio {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetReference() *datatypes_go_proto.Reference {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Reference); ok {
		return x.Reference
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetSampledData() *datatypes_go_proto.SampledData {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetSignature() *datatypes_go_proto.Signature {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Signature); ok {
		return x.Signature
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetTiming() *datatypes_go_proto.Timing {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Timing); ok {
		return x.Timing
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetContactDetail() *datatypes_go_proto.ContactDetail {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_ContactDetail); ok {
		return x.ContactDetail
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetContributor() *datatypes_go_proto.Contributor {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Contributor); ok {
		return x.Contributor
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetDataRequirement() *datatypes_go_proto.DataRequirement {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_DataRequirement); ok {
		return x.DataRequirement
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetExpression() *datatypes_go_proto.Expression {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Expression); ok {
		return x.Expression
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetParameterDefinition() *datatypes_go_proto.ParameterDefinition {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_ParameterDefinition); ok {
		return x.ParameterDefinition
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetRelatedArtifact() *datatypes_go_proto.RelatedArtifact {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_RelatedArtifact); ok {
		return x.RelatedArtifact
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetTriggerDefinition() *datatypes_go_proto.TriggerDefinition {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_TriggerDefinition); ok {
		return x.TriggerDefinition
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetUsageContext() *datatypes_go_proto.UsageContext {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_UsageContext); ok {
		return x.UsageContext
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Example_ValueX) GetDosage() *datatypes_go_proto.Dosage {
	if x, ok := x.GetChoice().(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Dosage); ok {
		return x.Dosage
	}
	return nil
}

type isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice interface {
	isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice()
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Base64Binary struct {
	Base64Binary *datatypes_go_proto.Base64Binary `protobuf:"bytes,1,opt,name=base64_binary,json=base64Binary,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Boolean struct {
	Boolean *datatypes_go_proto.Boolean `protobuf:"bytes,2,opt,name=boolean,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Canonical struct {
	Canonical *datatypes_go_proto.Canonical `protobuf:"bytes,3,opt,name=canonical,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Code struct {
	Code *datatypes_go_proto.Code `protobuf:"bytes,4,opt,name=code,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Date struct {
	Date *datatypes_go_proto.Date `protobuf:"bytes,5,opt,name=date,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_DateTime struct {
	DateTime *datatypes_go_proto.DateTime `protobuf:"bytes,6,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Decimal struct {
	Decimal *datatypes_go_proto.Decimal `protobuf:"bytes,7,opt,name=decimal,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Id struct {
	Id *datatypes_go_proto.Id `protobuf:"bytes,8,opt,name=id,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Instant struct {
	Instant *datatypes_go_proto.Instant `protobuf:"bytes,9,opt,name=instant,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Integer struct {
	Integer *datatypes_go_proto.Integer `protobuf:"bytes,10,opt,name=integer,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Markdown struct {
	Markdown *datatypes_go_proto.Markdown `protobuf:"bytes,11,opt,name=markdown,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Oid struct {
	Oid *datatypes_go_proto.Oid `protobuf:"bytes,12,opt,name=oid,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_PositiveInt struct {
	PositiveInt *datatypes_go_proto.PositiveInt `protobuf:"bytes,13,opt,name=positive_int,json=positiveInt,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_StringValue struct {
	StringValue *datatypes_go_proto.String `protobuf:"bytes,14,opt,name=string_value,json=string,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Time struct {
	Time *datatypes_go_proto.Time `protobuf:"bytes,15,opt,name=time,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_UnsignedInt struct {
	UnsignedInt *datatypes_go_proto.UnsignedInt `protobuf:"bytes,16,opt,name=unsigned_int,json=unsignedInt,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Uri struct {
	Uri *datatypes_go_proto.Uri `protobuf:"bytes,17,opt,name=uri,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Url struct {
	Url *datatypes_go_proto.Url `protobuf:"bytes,18,opt,name=url,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Uuid struct {
	Uuid *datatypes_go_proto.Uuid `protobuf:"bytes,19,opt,name=uuid,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Address struct {
	Address *datatypes_go_proto.Address `protobuf:"bytes,20,opt,name=address,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Age struct {
	Age *datatypes_go_proto.Age `protobuf:"bytes,21,opt,name=age,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Annotation struct {
	Annotation *datatypes_go_proto.Annotation `protobuf:"bytes,22,opt,name=annotation,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Attachment struct {
	Attachment *datatypes_go_proto.Attachment `protobuf:"bytes,23,opt,name=attachment,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_CodeableConcept struct {
	CodeableConcept *datatypes_go_proto.CodeableConcept `protobuf:"bytes,24,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Coding struct {
	Coding *datatypes_go_proto.Coding `protobuf:"bytes,25,opt,name=coding,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_ContactPoint struct {
	ContactPoint *datatypes_go_proto.ContactPoint `protobuf:"bytes,26,opt,name=contact_point,json=contactPoint,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Count struct {
	Count *datatypes_go_proto.Count `protobuf:"bytes,27,opt,name=count,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Distance struct {
	Distance *datatypes_go_proto.Distance `protobuf:"bytes,28,opt,name=distance,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Duration struct {
	Duration *datatypes_go_proto.Duration `protobuf:"bytes,29,opt,name=duration,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_HumanName struct {
	HumanName *datatypes_go_proto.HumanName `protobuf:"bytes,30,opt,name=human_name,json=humanName,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Identifier struct {
	Identifier *datatypes_go_proto.Identifier `protobuf:"bytes,31,opt,name=identifier,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Money struct {
	Money *datatypes_go_proto.Money `protobuf:"bytes,32,opt,name=money,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Period struct {
	Period *datatypes_go_proto.Period `protobuf:"bytes,33,opt,name=period,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Quantity struct {
	Quantity *datatypes_go_proto.Quantity `protobuf:"bytes,34,opt,name=quantity,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Range struct {
	Range *datatypes_go_proto.Range `protobuf:"bytes,35,opt,name=range,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Ratio struct {
	Ratio *datatypes_go_proto.Ratio `protobuf:"bytes,36,opt,name=ratio,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Reference struct {
	Reference *datatypes_go_proto.Reference `protobuf:"bytes,37,opt,name=reference,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_SampledData struct {
	SampledData *datatypes_go_proto.SampledData `protobuf:"bytes,38,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Signature struct {
	Signature *datatypes_go_proto.Signature `protobuf:"bytes,39,opt,name=signature,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Timing struct {
	Timing *datatypes_go_proto.Timing `protobuf:"bytes,40,opt,name=timing,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_ContactDetail struct {
	ContactDetail *datatypes_go_proto.ContactDetail `protobuf:"bytes,41,opt,name=contact_detail,json=contactDetail,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Contributor struct {
	Contributor *datatypes_go_proto.Contributor `protobuf:"bytes,42,opt,name=contributor,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_DataRequirement struct {
	DataRequirement *datatypes_go_proto.DataRequirement `protobuf:"bytes,43,opt,name=data_requirement,json=dataRequirement,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Expression struct {
	Expression *datatypes_go_proto.Expression `protobuf:"bytes,44,opt,name=expression,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_ParameterDefinition struct {
	ParameterDefinition *datatypes_go_proto.ParameterDefinition `protobuf:"bytes,45,opt,name=parameter_definition,json=parameterDefinition,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_RelatedArtifact struct {
	RelatedArtifact *datatypes_go_proto.RelatedArtifact `protobuf:"bytes,46,opt,name=related_artifact,json=relatedArtifact,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_TriggerDefinition struct {
	TriggerDefinition *datatypes_go_proto.TriggerDefinition `protobuf:"bytes,47,opt,name=trigger_definition,json=triggerDefinition,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_UsageContext struct {
	UsageContext *datatypes_go_proto.UsageContext `protobuf:"bytes,48,opt,name=usage_context,json=usageContext,proto3,oneof"`
}

type DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Dosage struct {
	Dosage *datatypes_go_proto.Dosage `protobuf:"bytes,49,opt,name=dosage,proto3,oneof"`
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Base64Binary) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Boolean) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Canonical) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Code) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Date) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_DateTime) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Decimal) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Id) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Instant) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Integer) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Markdown) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Oid) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_PositiveInt) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_StringValue) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Time) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_UnsignedInt) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Uri) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Url) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Uuid) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Address) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Age) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Annotation) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Attachment) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_CodeableConcept) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Coding) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_ContactPoint) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Count) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Distance) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Duration) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_HumanName) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Identifier) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Money) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Period) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Quantity) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Range) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Ratio) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Reference) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_SampledData) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Signature) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Timing) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_ContactDetail) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Contributor) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_DataRequirement) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Expression) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_ParameterDefinition) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_RelatedArtifact) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_TriggerDefinition) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_UsageContext) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

func (*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Dosage) isDataElementConstraintOnElementDefinitionDataType_Example_ValueX_Choice() {
}

// error | warning
type DataElementConstraintOnElementDefinitionDataType_Constraint_SeverityCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.ConstraintSeverityCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.ConstraintSeverityCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension             `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *DataElementConstraintOnElementDefinitionDataType_Constraint_SeverityCode) Reset() {
	*x = DataElementConstraintOnElementDefinitionDataType_Constraint_SeverityCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataElementConstraintOnElementDefinitionDataType_Constraint_SeverityCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataElementConstraintOnElementDefinitionDataType_Constraint_SeverityCode) ProtoMessage() {}

func (x *DataElementConstraintOnElementDefinitionDataType_Constraint_SeverityCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataElementConstraintOnElementDefinitionDataType_Constraint_SeverityCode.ProtoReflect.Descriptor instead.
func (*DataElementConstraintOnElementDefinitionDataType_Constraint_SeverityCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescGZIP(), []int{0, 6, 0}
}

func (x *DataElementConstraintOnElementDefinitionDataType_Constraint_SeverityCode) GetValue() codes_go_proto.ConstraintSeverityCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.ConstraintSeverityCode_INVALID_UNINITIALIZED
}

func (x *DataElementConstraintOnElementDefinitionDataType_Constraint_SeverityCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Constraint_SeverityCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// required | extensible | preferred | example
type DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding_StrengthCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.BindingStrengthCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.BindingStrengthCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension          `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding_StrengthCode) Reset() {
	*x = DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding_StrengthCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding_StrengthCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding_StrengthCode) ProtoMessage() {
}

func (x *DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding_StrengthCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding_StrengthCode.ProtoReflect.Descriptor instead.
func (*DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding_StrengthCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescGZIP(), []int{0, 7, 0}
}

func (x *DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding_StrengthCode) GetValue() codes_go_proto.BindingStrengthCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.BindingStrengthCode_INVALID_UNINITIALIZED
}

func (x *DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding_StrengthCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding_StrengthCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// Computable language of mapping
type DataElementConstraintOnElementDefinitionDataType_Mapping_LanguageCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *datatypes_go_proto.String      `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
	// This valueset is not enumerable, and so is represented as a string.
	Value string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DataElementConstraintOnElementDefinitionDataType_Mapping_LanguageCode) Reset() {
	*x = DataElementConstraintOnElementDefinitionDataType_Mapping_LanguageCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataElementConstraintOnElementDefinitionDataType_Mapping_LanguageCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataElementConstraintOnElementDefinitionDataType_Mapping_LanguageCode) ProtoMessage() {}

func (x *DataElementConstraintOnElementDefinitionDataType_Mapping_LanguageCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataElementConstraintOnElementDefinitionDataType_Mapping_LanguageCode.ProtoReflect.Descriptor instead.
func (*DataElementConstraintOnElementDefinitionDataType_Mapping_LanguageCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescGZIP(), []int{0, 8, 0}
}

func (x *DataElementConstraintOnElementDefinitionDataType_Mapping_LanguageCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Mapping_LanguageCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *DataElementConstraintOnElementDefinitionDataType_Mapping_LanguageCode) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_proto_google_fhir_proto_r4_core_profiles_datatypes_proto protoreflect.FileDescriptor

var file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDesc = []byte{
	0x0a, 0x38, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x1a,
	0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf2, 0x74, 0x0a, 0x30, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x4f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x3a, 0x0a, 0x0a, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x09, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x50,
	0x0a, 0x15, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x13, 0x73, 0x6c, 0x69,
	0x63, 0x65, 0x49, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x12, 0x31, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x2f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x64,
	0x6f, 0x77, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0c,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77,
	0x6e, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x31, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x12, 0x32, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x49, 0x6e,
	0x74, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x63, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x42, 0x34, 0xf2, 0xbe, 0xc0, 0xa4, 0x07, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x29, 0x20,
	0x6f, 0x72, 0x20, 0x28, 0x24, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3d, 0x20, 0x27, 0x2a, 0x27, 0x29,
	0x20, 0x6f, 0x72, 0x20, 0x28, 0x74, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x28, 0x29,
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x29, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x5e, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x4f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x4f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x66, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x78,
	0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x4f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x58, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4f, 0x0a, 0x14, 0x6d, 0x65, 0x61, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x12, 0x6d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x57, 0x68,
	0x65, 0x6e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x40, 0x0a, 0x0d, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x6d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x67, 0x0a, 0x07, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x07, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x12, 0x6c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x4f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4d,
	0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x58, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x6c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x4f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x61, 0x78,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x58, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x3b, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x35, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x70, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x4f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0c, 0x6d, 0x75, 0x73, 0x74, 0x5f, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x0b, 0x6d, 0x75, 0x73, 0x74,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x49, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x22, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x10, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x78, 0x0a, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x24, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x5e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4f,
	0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x67, 0x0a, 0x07,
	0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x25, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x6d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x81, 0x01, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x26, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x48, 0xaa, 0xfc, 0x8f, 0x93, 0x06, 0x42, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xac, 0x01, 0x0a, 0x0d, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x27, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x55, 0x6e, 0x69, 0x74, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x58, 0x42, 0x4c, 0xaa, 0xfc,
	0x8f, 0x93, 0x06, 0x46, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x0c, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x1a, 0x9d, 0x02, 0x0a, 0x04, 0x42, 0x61, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c,
	0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3a, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x49, 0x6e, 0x74, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x03, 0x6d, 0x69,
	0x6e, 0x12, 0x35, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x06, 0xf0, 0xd0, 0x87,
	0xeb, 0x04, 0x01, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x1a, 0xb3, 0x06, 0x0a, 0x07, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x66, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x34, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x55, 0x72, 0x69, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x0d, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x7c, 0x0a, 0x0a,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x5c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4f, 0x6e, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x66, 0x2e,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x1a, 0xbb, 0x02, 0x0a, 0x0e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4a, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x72, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2,
	0x05, 0x34, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x2d, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x3a, 0x78, 0x9a, 0x86, 0x93, 0xa0, 0x08, 0x2b,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x28, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x28, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x3d, 0x20, 0x27,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x27, 0x29, 0x9a, 0x86, 0x93, 0xa0, 0x08,
	0x41, 0x28, 0x63, 0x6f, 0x64, 0x65, 0x3d, 0x27, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x27, 0x20, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x63, 0x61,
	0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x27, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x28, 0x29, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07, 0x1a, 0x89,
	0x18, 0x0a, 0x0d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x58,
	0x12, 0x48, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x5f, 0x62, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x36, 0x34, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x61,
	0x73, 0x65, 0x36, 0x34, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x07, 0x62, 0x6f,
	0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x62, 0x6f, 0x6f,
	0x6c, 0x65, 0x61, 0x6e, 0x12, 0x3e, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x61,
	0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x6f, 0x6e,
	0x69, 0x63, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x29,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x3b, 0x0a,
	0x08, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x48, 0x00,
	0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x2c, 0x0a, 0x03, 0x6f, 0x69,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x69,
	0x64, 0x48, 0x00, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x45, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x0b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x12,
	0x3b, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x45, 0x0a,
	0x0c, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x49, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x49, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x72, 0x69, 0x48, 0x00, 0x52, 0x03, 0x75,
	0x72, 0x69, 0x12, 0x2c, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x72, 0x6c, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x2f, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x75, 0x69, 0x64, 0x48, 0x00, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x38, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x03, 0x61,
	0x67, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x51, 0x0a, 0x10, 0x63, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x63,
	0x65, 0x70, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x48,
	0x00, 0x52, 0x0f, 0x63, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65,
	0x70, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x48, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3f, 0x0a, 0x0a, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x48, 0x75, 0x6d, 0x61,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x09, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x48, 0x00, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x06, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x3b, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x48, 0x00, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a,
	0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x32, 0x0a, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x48, 0x00, 0x52, 0x05,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x3e, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52,
	0x0b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48,
	0x00, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x35, 0x0a, 0x06,
	0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x06, 0x74, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x12, 0x4b, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48,
	0x00, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x44, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x18,
	0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x51, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x14,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x13, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x10, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x18,
	0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x57,
	0x0a, 0x12, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0d, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x48, 0x00, 0x52, 0x0c, 0x75, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x35, 0x0a, 0x06, 0x64, 0x6f, 0x73, 0x61, 0x67, 0x65, 0x18, 0x31, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x6f, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x06, 0x64, 0x6f, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x06, 0xa0, 0x83, 0x83, 0xe8, 0x06, 0x01,
	0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x1a, 0xa8, 0x1a, 0x0a, 0x07, 0x45,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x39, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x06, 0xf0,
	0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x72, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x58, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x82, 0x18, 0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x58, 0x12, 0x48, 0x0a, 0x0d, 0x62,
	0x61, 0x73, 0x65, 0x36, 0x34, 0x5f, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x42,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x42,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x65, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12,
	0x3e, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63,
	0x61, 0x6c, 0x48, 0x00, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x12,
	0x2f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x3c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x38, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x00,
	0x52, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x48, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x12, 0x38,
	0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x08, 0x6d, 0x61, 0x72, 0x6b,
	0x64, 0x6f, 0x77, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x61, 0x72,
	0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x2c, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x69, 0x64, 0x48, 0x00, 0x52, 0x03,
	0x6f, 0x69, 0x64, 0x12, 0x45, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x69, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x48, 0x00, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x75, 0x6e, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x0b, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x12,
	0x2c, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x55, 0x72, 0x69, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x2c, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x55, 0x72, 0x6c, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2f, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x55, 0x75, 0x69, 0x64, 0x48, 0x00, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x03, 0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x51, 0x0a, 0x10, 0x63, 0x6f,
	0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x6f,
	0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x12, 0x35, 0x0a,
	0x06, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x48, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x32,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x3b, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0a,
	0x68, 0x75, 0x6d, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x48, 0x00, 0x52, 0x09, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x32, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x48, 0x00, 0x52, 0x05, 0x6d,
	0x6f, 0x6e, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x21,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x48, 0x00, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x05,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x12, 0x3e, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x25, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x45, 0x0a, 0x0c, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e,
	0x67, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x69,
	0x6d, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x4b,
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x44, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f,
	0x72, 0x12, 0x51, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x14, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x13, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x10, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x57, 0x0a, 0x12, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x11, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0d, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x48, 0x00, 0x52, 0x0c,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x35, 0x0a, 0x06,
	0x64, 0x6f, 0x73, 0x61, 0x67, 0x65, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x44, 0x6f, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6f, 0x73,
	0x61, 0x67, 0x65, 0x3a, 0x06, 0xa0, 0x83, 0x83, 0xe8, 0x06, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x63,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x1a, 0xb6, 0x04, 0x0a, 0x09, 0x4d, 0x69, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x58, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a,
	0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x07,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x12, 0x45, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0c, 0x75, 0x6e, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x0b, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x12,
	0x3b, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x48, 0x00, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x3a, 0x06, 0xa0, 0x83,
	0x83, 0xe8, 0x06, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x1a, 0xb6,
	0x04, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x58, 0x12, 0x2f, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a,
	0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48,
	0x00, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x12, 0x38, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x0c, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x49,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e,
	0x74, 0x12, 0x45, 0x0a, 0x0c, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x69, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x6e,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x6e, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x3a, 0x06, 0xa0, 0x83, 0x83, 0xe8, 0x06, 0x01, 0x42, 0x08, 0x0a,
	0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x1a, 0xa2, 0x07, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x31, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x3f, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x4f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52,
	0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x68, 0x75, 0x6d,
	0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x05, 0x68,
	0x75, 0x6d, 0x61, 0x6e, 0x12, 0x3b, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x31, 0x0a, 0x05, 0x78, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x78,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x6f, 0x6e,
	0x69, 0x63, 0x61, 0x6c, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0xb2, 0x02, 0x0a,
	0x0c, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x47, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x3a, 0x6e, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x30, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2d, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x9a,
	0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64,
	0x65, 0x3a, 0x19, 0x9a, 0x86, 0x93, 0xa0, 0x08, 0x13, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x28, 0x29, 0x1a, 0xc1, 0x06, 0x0a,
	0x18, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x8f, 0x01, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x6b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x4f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x43, 0x6f, 0x64, 0x65, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x08, 0x73, 0x74,
	0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x3d, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73,
	0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43,
	0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53,
	0x65, 0x74, 0x1a, 0xac, 0x02, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x6b, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2,
	0x05, 0x2d, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x62,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2d, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x9a,
	0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64,
	0x65, 0x3a, 0x7d, 0x9a, 0x86, 0x93, 0xa0, 0x08, 0x77, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65,
	0x74, 0x2e, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x28, 0x29, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x69,
	0x65, 0x73, 0x20, 0x28, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2e, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x28, 0x27, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x27, 0x29,
	0x20, 0x6f, 0x72, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2e, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x28, 0x27, 0x68, 0x74, 0x74, 0x70, 0x73, 0x27, 0x29,
	0x20, 0x6f, 0x72, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2e, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x28, 0x27, 0x75, 0x72, 0x6e, 0x3a, 0x27, 0x29, 0x29,
	0x1a, 0x95, 0x05, 0x0a, 0x07, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x49, 0x64, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x76, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x4f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x03,
	0x6d, 0x61, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x03,
	0x6d, 0x61, 0x70, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0xfb, 0x01, 0x0a, 0x0c, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x64, 0xc0, 0x9f,
	0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x26, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x6d, 0x69, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f,
	0x64, 0x65, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x3a, 0x84, 0x09, 0xc0, 0x9f, 0xe3, 0xb6, 0x05,
	0x02, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x39, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0xb2, 0xfe, 0xe4, 0x97, 0x06, 0x3c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2d,
	0x64, 0x65, 0x9a, 0x86, 0x93, 0xa0, 0x08, 0x54, 0x6d, 0x69, 0x6e, 0x2e, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x28, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x6d, 0x61, 0x78, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x28, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x28, 0x6d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x27, 0x2a, 0x27,
	0x29, 0x20, 0x6f, 0x72, 0x20, 0x69, 0x69, 0x66, 0x28, 0x6d, 0x61, 0x78, 0x20, 0x21, 0x3d, 0x20,
	0x27, 0x2a, 0x27, 0x2c, 0x20, 0x6d, 0x69, 0x6e, 0x20, 0x3c, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x2e,
	0x74, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x28, 0x29, 0x29, 0x9a, 0x86, 0x93, 0xa0,
	0x08, 0xd1, 0x01, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x28,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x29, 0x20, 0x61, 0x6e, 0x64,
	0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x28, 0x29, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x66, 0x69, 0x78, 0x65, 0x64, 0x2e,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x29, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x70, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x6e, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x29, 0x20, 0x61, 0x6e, 0x64, 0x20,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x29, 0x20,
	0x61, 0x6e, 0x64, 0x20, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x28, 0x29, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x29, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6d, 0x61,
	0x78, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x29, 0x20,
	0x61, 0x6e, 0x64, 0x20, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x28, 0x29, 0x29, 0x9a, 0x86, 0x93, 0xa0, 0x08, 0x26, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x28, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x28, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x29,
	0x9a, 0x86, 0x93, 0xa0, 0x08, 0x25, 0x66, 0x69, 0x78, 0x65, 0x64, 0x2e, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x28, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x28, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x28, 0x29, 0x20, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x29, 0x9a, 0x86, 0x93, 0xa0, 0x08,
	0xbc, 0x01, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x28,
	0x29, 0x20, 0x6f, 0x72, 0x20, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x28, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x28, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x63,
	0x6f, 0x64, 0x65, 0x27, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x28, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x3d,
	0x20, 0x27, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x27, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x28, 0x63,
	0x6f, 0x64, 0x65, 0x3d, 0x27, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x63, 0x65, 0x70, 0x74, 0x27, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x28, 0x63, 0x6f, 0x64, 0x65, 0x20,
	0x3d, 0x20, 0x27, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x27, 0x29, 0x20, 0x6f, 0x72,
	0x20, 0x28, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x27, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x28, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x75,
	0x72, 0x69, 0x27, 0x29, 0x29, 0x2e, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x28, 0x29, 0x9a, 0x86,
	0x93, 0xa0, 0x08, 0x37, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x49, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x28, 0x29,
	0x20, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x20, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x2e, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x28, 0x29, 0x9a, 0x86, 0x93, 0xa0, 0x08,
	0x20, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x29,
	0x20, 0x6f, 0x72, 0x20, 0x66, 0x69, 0x78, 0x65, 0x64, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x28,
	0x29, 0x9a, 0x86, 0x93, 0xa0, 0x08, 0x23, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x2e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x6b, 0x65, 0x79, 0x29, 0x2e, 0x69, 0x73,
	0x44, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x28, 0x29, 0x9a, 0x86, 0x93, 0xa0, 0x08, 0x1e,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x63, 0x6f, 0x64, 0x65,
	0x29, 0x2e, 0x69, 0x73, 0x44, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x28, 0x29, 0x9a, 0x86,
	0x93, 0xa0, 0x08, 0x48, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x2e, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x28, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x28, 0x27, 0x5e, 0x5b, 0x61, 0x2d,
	0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5c, 0x5c, 0x2f, 0x5c, 0x5c, 0x2d, 0x5f, 0x5c, 0x5c,
	0x5b, 0x5c, 0x5c, 0x5d, 0x5c, 0x5c, 0x40, 0x5d, 0x2b, 0x24, 0x27, 0x29, 0x9a, 0x86, 0x93, 0xa0,
	0x08, 0x32, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x28, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x6d, 0x65, 0x61, 0x6e, 0x69, 0x6e,
	0x67, 0x57, 0x68, 0x65, 0x6e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x28, 0x29, 0x9a, 0x86, 0x93, 0xa0, 0x08, 0x2c, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x20, 0x69, 0x73, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e, 0x65, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x28, 0x29, 0x9a, 0x86, 0x93, 0xa0, 0x08, 0x43, 0x70, 0x61, 0x74, 0x68,
	0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x28, 0x27, 0x5b, 0x41, 0x2d, 0x5a, 0x61, 0x2d,
	0x7a, 0x5d, 0x5b, 0x41, 0x2d, 0x5a, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x2a, 0x28, 0x5c,
	0x5c, 0x2e, 0x5b, 0x61, 0x2d, 0x7a, 0x5d, 0x5b, 0x41, 0x2d, 0x5a, 0x61, 0x2d, 0x7a, 0x30, 0x2d,
	0x39, 0x5d, 0x2a, 0x28, 0x5c, 0x5c, 0x5b, 0x78, 0x5d, 0x29, 0x3f, 0x29, 0x2a, 0x27, 0x29, 0x4a,
	0x04, 0x08, 0x05, 0x10, 0x06, 0x4a, 0x04, 0x08, 0x0a, 0x10, 0x0b, 0x4a, 0x04, 0x08, 0x0b, 0x10,
	0x0c, 0x4a, 0x04, 0x08, 0x13, 0x10, 0x14, 0x4a, 0x04, 0x08, 0x18, 0x10, 0x19, 0x4a, 0x04, 0x08,
	0x19, 0x10, 0x1a, 0x4a, 0x04, 0x08, 0x21, 0x10, 0x22, 0x4a, 0x04, 0x08, 0x23, 0x10, 0x24, 0x42,
	0x78, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x01, 0x5a, 0x55, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x98, 0xc6, 0xb0, 0xb5, 0x07, 0x04, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescOnce sync.Once
	file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescData = file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDesc
)

func file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescGZIP() []byte {
	file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescOnce.Do(func() {
		file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescData)
	})
	return file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDescData
}

var file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_goTypes = []interface{}{
	(*DataElementConstraintOnElementDefinitionDataType)(nil),                                       // 0: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType
	(*DataElementConstraintOnElementDefinitionDataType_Base)(nil),                                  // 1: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Base
	(*DataElementConstraintOnElementDefinitionDataType_TypeRef)(nil),                               // 2: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.TypeRef
	(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX)(nil),                         // 3: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX
	(*DataElementConstraintOnElementDefinitionDataType_Example)(nil),                               // 4: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example
	(*DataElementConstraintOnElementDefinitionDataType_MinValueX)(nil),                             // 5: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MinValueX
	(*DataElementConstraintOnElementDefinitionDataType_MaxValueX)(nil),                             // 6: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MaxValueX
	(*DataElementConstraintOnElementDefinitionDataType_Constraint)(nil),                            // 7: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Constraint
	(*DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding)(nil),              // 8: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.ElementDefinitionBinding
	(*DataElementConstraintOnElementDefinitionDataType_Mapping)(nil),                               // 9: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Mapping
	(*DataElementConstraintOnElementDefinitionDataType_TypeRef_VersioningCode)(nil),                // 10: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.TypeRef.VersioningCode
	(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX)(nil),                        // 11: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX
	(*DataElementConstraintOnElementDefinitionDataType_Constraint_SeverityCode)(nil),               // 12: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Constraint.SeverityCode
	(*DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding_StrengthCode)(nil), // 13: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.ElementDefinitionBinding.StrengthCode
	(*DataElementConstraintOnElementDefinitionDataType_Mapping_LanguageCode)(nil),                  // 14: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Mapping.LanguageCode
	(*datatypes_go_proto.String)(nil),                                                              // 15: google.fhir.r4.core.String
	(*datatypes_go_proto.Extension)(nil),                                                           // 16: google.fhir.r4.core.Extension
	(*datatypes_go_proto.Boolean)(nil),                                                             // 17: google.fhir.r4.core.Boolean
	(*datatypes_go_proto.Coding)(nil),                                                              // 18: google.fhir.r4.core.Coding
	(*datatypes_go_proto.Markdown)(nil),                                                            // 19: google.fhir.r4.core.Markdown
	(*datatypes_go_proto.UnsignedInt)(nil),                                                         // 20: google.fhir.r4.core.UnsignedInt
	(*datatypes_go_proto.Integer)(nil),                                                             // 21: google.fhir.r4.core.Integer
	(*datatypes_go_proto.Id)(nil),                                                                  // 22: google.fhir.r4.core.Id
	(*extensions_go_proto.ElementDefinitionAllowedUnits_ValueX)(nil),                               // 23: google.fhir.r4.core.ElementDefinitionAllowedUnits.ValueX
	(*datatypes_go_proto.Uri)(nil),                                                                 // 24: google.fhir.r4.core.Uri
	(*datatypes_go_proto.Canonical)(nil),                                                           // 25: google.fhir.r4.core.Canonical
	(*datatypes_go_proto.Base64Binary)(nil),                                                        // 26: google.fhir.r4.core.Base64Binary
	(*datatypes_go_proto.Code)(nil),                                                                // 27: google.fhir.r4.core.Code
	(*datatypes_go_proto.Date)(nil),                                                                // 28: google.fhir.r4.core.Date
	(*datatypes_go_proto.DateTime)(nil),                                                            // 29: google.fhir.r4.core.DateTime
	(*datatypes_go_proto.Decimal)(nil),                                                             // 30: google.fhir.r4.core.Decimal
	(*datatypes_go_proto.Instant)(nil),                                                             // 31: google.fhir.r4.core.Instant
	(*datatypes_go_proto.Oid)(nil),                                                                 // 32: google.fhir.r4.core.Oid
	(*datatypes_go_proto.PositiveInt)(nil),                                                         // 33: google.fhir.r4.core.PositiveInt
	(*datatypes_go_proto.Time)(nil),                                                                // 34: google.fhir.r4.core.Time
	(*datatypes_go_proto.Url)(nil),                                                                 // 35: google.fhir.r4.core.Url
	(*datatypes_go_proto.Uuid)(nil),                                                                // 36: google.fhir.r4.core.Uuid
	(*datatypes_go_proto.Address)(nil),                                                             // 37: google.fhir.r4.core.Address
	(*datatypes_go_proto.Age)(nil),                                                                 // 38: google.fhir.r4.core.Age
	(*datatypes_go_proto.Annotation)(nil),                                                          // 39: google.fhir.r4.core.Annotation
	(*datatypes_go_proto.Attachment)(nil),                                                          // 40: google.fhir.r4.core.Attachment
	(*datatypes_go_proto.CodeableConcept)(nil),                                                     // 41: google.fhir.r4.core.CodeableConcept
	(*datatypes_go_proto.ContactPoint)(nil),                                                        // 42: google.fhir.r4.core.ContactPoint
	(*datatypes_go_proto.Count)(nil),                                                               // 43: google.fhir.r4.core.Count
	(*datatypes_go_proto.Distance)(nil),                                                            // 44: google.fhir.r4.core.Distance
	(*datatypes_go_proto.Duration)(nil),                                                            // 45: google.fhir.r4.core.Duration
	(*datatypes_go_proto.HumanName)(nil),                                                           // 46: google.fhir.r4.core.HumanName
	(*datatypes_go_proto.Identifier)(nil),                                                          // 47: google.fhir.r4.core.Identifier
	(*datatypes_go_proto.Money)(nil),                                                               // 48: google.fhir.r4.core.Money
	(*datatypes_go_proto.Period)(nil),                                                              // 49: google.fhir.r4.core.Period
	(*datatypes_go_proto.Quantity)(nil),                                                            // 50: google.fhir.r4.core.Quantity
	(*datatypes_go_proto.Range)(nil),                                                               // 51: google.fhir.r4.core.Range
	(*datatypes_go_proto.Ratio)(nil),                                                               // 52: google.fhir.r4.core.Ratio
	(*datatypes_go_proto.Reference)(nil),                                                           // 53: google.fhir.r4.core.Reference
	(*datatypes_go_proto.SampledData)(nil),                                                         // 54: google.fhir.r4.core.SampledData
	(*datatypes_go_proto.Signature)(nil),                                                           // 55: google.fhir.r4.core.Signature
	(*datatypes_go_proto.Timing)(nil),                                                              // 56: google.fhir.r4.core.Timing
	(*datatypes_go_proto.ContactDetail)(nil),                                                       // 57: google.fhir.r4.core.ContactDetail
	(*datatypes_go_proto.Contributor)(nil),                                                         // 58: google.fhir.r4.core.Contributor
	(*datatypes_go_proto.DataRequirement)(nil),                                                     // 59: google.fhir.r4.core.DataRequirement
	(*datatypes_go_proto.Expression)(nil),                                                          // 60: google.fhir.r4.core.Expression
	(*datatypes_go_proto.ParameterDefinition)(nil),                                                 // 61: google.fhir.r4.core.ParameterDefinition
	(*datatypes_go_proto.RelatedArtifact)(nil),                                                     // 62: google.fhir.r4.core.RelatedArtifact
	(*datatypes_go_proto.TriggerDefinition)(nil),                                                   // 63: google.fhir.r4.core.TriggerDefinition
	(*datatypes_go_proto.UsageContext)(nil),                                                        // 64: google.fhir.r4.core.UsageContext
	(*datatypes_go_proto.Dosage)(nil),                                                              // 65: google.fhir.r4.core.Dosage
	(codes_go_proto.ReferenceVersionRulesCode_Value)(0),                                            // 66: google.fhir.r4.core.ReferenceVersionRulesCode.Value
	(codes_go_proto.ConstraintSeverityCode_Value)(0),                                               // 67: google.fhir.r4.core.ConstraintSeverityCode.Value
	(codes_go_proto.BindingStrengthCode_Value)(0),                                                  // 68: google.fhir.r4.core.BindingStrengthCode.Value
}
var file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_depIdxs = []int32{
	15,  // 0: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.id:type_name -> google.fhir.r4.core.String
	16,  // 1: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.extension:type_name -> google.fhir.r4.core.Extension
	16,  // 2: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.modifier_extension:type_name -> google.fhir.r4.core.Extension
	15,  // 3: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.path:type_name -> google.fhir.r4.core.String
	15,  // 4: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.slice_name:type_name -> google.fhir.r4.core.String
	17,  // 5: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.slice_is_constraining:type_name -> google.fhir.r4.core.Boolean
	15,  // 6: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.label:type_name -> google.fhir.r4.core.String
	18,  // 7: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.code:type_name -> google.fhir.r4.core.Coding
	19,  // 8: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.definition:type_name -> google.fhir.r4.core.Markdown
	19,  // 9: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.comment:type_name -> google.fhir.r4.core.Markdown
	19,  // 10: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.requirements:type_name -> google.fhir.r4.core.Markdown
	15,  // 11: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.alias:type_name -> google.fhir.r4.core.String
	20,  // 12: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.min:type_name -> google.fhir.r4.core.UnsignedInt
	15,  // 13: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.max:type_name -> google.fhir.r4.core.String
	1,   // 14: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.base:type_name -> google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Base
	2,   // 15: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.type:type_name -> google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.TypeRef
	3,   // 16: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.default_value:type_name -> google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX
	19,  // 17: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.meaning_when_missing:type_name -> google.fhir.r4.core.Markdown
	15,  // 18: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.order_meaning:type_name -> google.fhir.r4.core.String
	4,   // 19: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.example:type_name -> google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example
	5,   // 20: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.min_value:type_name -> google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MinValueX
	6,   // 21: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.max_value:type_name -> google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MaxValueX
	21,  // 22: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.max_length:type_name -> google.fhir.r4.core.Integer
	22,  // 23: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.condition:type_name -> google.fhir.r4.core.Id
	7,   // 24: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.constraint:type_name -> google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Constraint
	17,  // 25: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.must_support:type_name -> google.fhir.r4.core.Boolean
	15,  // 26: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.is_modifier_reason:type_name -> google.fhir.r4.core.String
	8,   // 27: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.binding:type_name -> google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.ElementDefinitionBinding
	9,   // 28: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.mapping:type_name -> google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Mapping
	15,  // 29: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.question:type_name -> google.fhir.r4.core.String
	23,  // 30: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.allowed_units:type_name -> google.fhir.r4.core.ElementDefinitionAllowedUnits.ValueX
	15,  // 31: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Base.id:type_name -> google.fhir.r4.core.String
	16,  // 32: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Base.extension:type_name -> google.fhir.r4.core.Extension
	15,  // 33: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Base.path:type_name -> google.fhir.r4.core.String
	20,  // 34: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Base.min:type_name -> google.fhir.r4.core.UnsignedInt
	15,  // 35: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Base.max:type_name -> google.fhir.r4.core.String
	15,  // 36: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.TypeRef.id:type_name -> google.fhir.r4.core.String
	16,  // 37: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.TypeRef.extension:type_name -> google.fhir.r4.core.Extension
	24,  // 38: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.TypeRef.code:type_name -> google.fhir.r4.core.Uri
	25,  // 39: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.TypeRef.target_profile:type_name -> google.fhir.r4.core.Canonical
	10,  // 40: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.TypeRef.versioning:type_name -> google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.TypeRef.VersioningCode
	26,  // 41: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.base64_binary:type_name -> google.fhir.r4.core.Base64Binary
	17,  // 42: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.boolean:type_name -> google.fhir.r4.core.Boolean
	25,  // 43: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.canonical:type_name -> google.fhir.r4.core.Canonical
	27,  // 44: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.code:type_name -> google.fhir.r4.core.Code
	28,  // 45: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.date:type_name -> google.fhir.r4.core.Date
	29,  // 46: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.date_time:type_name -> google.fhir.r4.core.DateTime
	30,  // 47: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.decimal:type_name -> google.fhir.r4.core.Decimal
	22,  // 48: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.id:type_name -> google.fhir.r4.core.Id
	31,  // 49: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.instant:type_name -> google.fhir.r4.core.Instant
	21,  // 50: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.integer:type_name -> google.fhir.r4.core.Integer
	19,  // 51: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.markdown:type_name -> google.fhir.r4.core.Markdown
	32,  // 52: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.oid:type_name -> google.fhir.r4.core.Oid
	33,  // 53: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.positive_int:type_name -> google.fhir.r4.core.PositiveInt
	15,  // 54: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.string_value:type_name -> google.fhir.r4.core.String
	34,  // 55: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.time:type_name -> google.fhir.r4.core.Time
	20,  // 56: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.unsigned_int:type_name -> google.fhir.r4.core.UnsignedInt
	24,  // 57: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.uri:type_name -> google.fhir.r4.core.Uri
	35,  // 58: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.url:type_name -> google.fhir.r4.core.Url
	36,  // 59: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.uuid:type_name -> google.fhir.r4.core.Uuid
	37,  // 60: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.address:type_name -> google.fhir.r4.core.Address
	38,  // 61: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.age:type_name -> google.fhir.r4.core.Age
	39,  // 62: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.annotation:type_name -> google.fhir.r4.core.Annotation
	40,  // 63: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.attachment:type_name -> google.fhir.r4.core.Attachment
	41,  // 64: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.codeable_concept:type_name -> google.fhir.r4.core.CodeableConcept
	18,  // 65: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.coding:type_name -> google.fhir.r4.core.Coding
	42,  // 66: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.contact_point:type_name -> google.fhir.r4.core.ContactPoint
	43,  // 67: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.count:type_name -> google.fhir.r4.core.Count
	44,  // 68: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.distance:type_name -> google.fhir.r4.core.Distance
	45,  // 69: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.duration:type_name -> google.fhir.r4.core.Duration
	46,  // 70: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.human_name:type_name -> google.fhir.r4.core.HumanName
	47,  // 71: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.identifier:type_name -> google.fhir.r4.core.Identifier
	48,  // 72: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.money:type_name -> google.fhir.r4.core.Money
	49,  // 73: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.period:type_name -> google.fhir.r4.core.Period
	50,  // 74: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.quantity:type_name -> google.fhir.r4.core.Quantity
	51,  // 75: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.range:type_name -> google.fhir.r4.core.Range
	52,  // 76: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.ratio:type_name -> google.fhir.r4.core.Ratio
	53,  // 77: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.reference:type_name -> google.fhir.r4.core.Reference
	54,  // 78: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.sampled_data:type_name -> google.fhir.r4.core.SampledData
	55,  // 79: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.signature:type_name -> google.fhir.r4.core.Signature
	56,  // 80: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.timing:type_name -> google.fhir.r4.core.Timing
	57,  // 81: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.contact_detail:type_name -> google.fhir.r4.core.ContactDetail
	58,  // 82: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.contributor:type_name -> google.fhir.r4.core.Contributor
	59,  // 83: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.data_requirement:type_name -> google.fhir.r4.core.DataRequirement
	60,  // 84: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.expression:type_name -> google.fhir.r4.core.Expression
	61,  // 85: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.parameter_definition:type_name -> google.fhir.r4.core.ParameterDefinition
	62,  // 86: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.related_artifact:type_name -> google.fhir.r4.core.RelatedArtifact
	63,  // 87: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.trigger_definition:type_name -> google.fhir.r4.core.TriggerDefinition
	64,  // 88: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.usage_context:type_name -> google.fhir.r4.core.UsageContext
	65,  // 89: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.DefaultValueX.dosage:type_name -> google.fhir.r4.core.Dosage
	15,  // 90: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.id:type_name -> google.fhir.r4.core.String
	16,  // 91: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.extension:type_name -> google.fhir.r4.core.Extension
	15,  // 92: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.label:type_name -> google.fhir.r4.core.String
	11,  // 93: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.value:type_name -> google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX
	28,  // 94: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MinValueX.date:type_name -> google.fhir.r4.core.Date
	29,  // 95: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MinValueX.date_time:type_name -> google.fhir.r4.core.DateTime
	31,  // 96: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MinValueX.instant:type_name -> google.fhir.r4.core.Instant
	34,  // 97: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MinValueX.time:type_name -> google.fhir.r4.core.Time
	30,  // 98: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MinValueX.decimal:type_name -> google.fhir.r4.core.Decimal
	21,  // 99: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MinValueX.integer:type_name -> google.fhir.r4.core.Integer
	33,  // 100: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MinValueX.positive_int:type_name -> google.fhir.r4.core.PositiveInt
	20,  // 101: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MinValueX.unsigned_int:type_name -> google.fhir.r4.core.UnsignedInt
	50,  // 102: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MinValueX.quantity:type_name -> google.fhir.r4.core.Quantity
	28,  // 103: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MaxValueX.date:type_name -> google.fhir.r4.core.Date
	29,  // 104: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MaxValueX.date_time:type_name -> google.fhir.r4.core.DateTime
	31,  // 105: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MaxValueX.instant:type_name -> google.fhir.r4.core.Instant
	34,  // 106: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MaxValueX.time:type_name -> google.fhir.r4.core.Time
	30,  // 107: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MaxValueX.decimal:type_name -> google.fhir.r4.core.Decimal
	21,  // 108: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MaxValueX.integer:type_name -> google.fhir.r4.core.Integer
	33,  // 109: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MaxValueX.positive_int:type_name -> google.fhir.r4.core.PositiveInt
	20,  // 110: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MaxValueX.unsigned_int:type_name -> google.fhir.r4.core.UnsignedInt
	50,  // 111: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.MaxValueX.quantity:type_name -> google.fhir.r4.core.Quantity
	15,  // 112: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Constraint.id:type_name -> google.fhir.r4.core.String
	16,  // 113: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Constraint.extension:type_name -> google.fhir.r4.core.Extension
	22,  // 114: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Constraint.key:type_name -> google.fhir.r4.core.Id
	15,  // 115: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Constraint.requirements:type_name -> google.fhir.r4.core.String
	12,  // 116: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Constraint.severity:type_name -> google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Constraint.SeverityCode
	15,  // 117: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Constraint.human:type_name -> google.fhir.r4.core.String
	15,  // 118: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Constraint.expression:type_name -> google.fhir.r4.core.String
	15,  // 119: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Constraint.xpath:type_name -> google.fhir.r4.core.String
	25,  // 120: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Constraint.source:type_name -> google.fhir.r4.core.Canonical
	15,  // 121: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.ElementDefinitionBinding.id:type_name -> google.fhir.r4.core.String
	16,  // 122: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.ElementDefinitionBinding.extension:type_name -> google.fhir.r4.core.Extension
	13,  // 123: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.ElementDefinitionBinding.strength:type_name -> google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.ElementDefinitionBinding.StrengthCode
	15,  // 124: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.ElementDefinitionBinding.description:type_name -> google.fhir.r4.core.String
	25,  // 125: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.ElementDefinitionBinding.value_set:type_name -> google.fhir.r4.core.Canonical
	15,  // 126: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Mapping.id:type_name -> google.fhir.r4.core.String
	16,  // 127: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Mapping.extension:type_name -> google.fhir.r4.core.Extension
	22,  // 128: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Mapping.identity:type_name -> google.fhir.r4.core.Id
	14,  // 129: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Mapping.language:type_name -> google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Mapping.LanguageCode
	15,  // 130: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Mapping.map:type_name -> google.fhir.r4.core.String
	15,  // 131: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Mapping.comment:type_name -> google.fhir.r4.core.String
	66,  // 132: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.TypeRef.VersioningCode.value:type_name -> google.fhir.r4.core.ReferenceVersionRulesCode.Value
	15,  // 133: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.TypeRef.VersioningCode.id:type_name -> google.fhir.r4.core.String
	16,  // 134: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.TypeRef.VersioningCode.extension:type_name -> google.fhir.r4.core.Extension
	26,  // 135: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.base64_binary:type_name -> google.fhir.r4.core.Base64Binary
	17,  // 136: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.boolean:type_name -> google.fhir.r4.core.Boolean
	25,  // 137: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.canonical:type_name -> google.fhir.r4.core.Canonical
	27,  // 138: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.code:type_name -> google.fhir.r4.core.Code
	28,  // 139: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.date:type_name -> google.fhir.r4.core.Date
	29,  // 140: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.date_time:type_name -> google.fhir.r4.core.DateTime
	30,  // 141: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.decimal:type_name -> google.fhir.r4.core.Decimal
	22,  // 142: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.id:type_name -> google.fhir.r4.core.Id
	31,  // 143: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.instant:type_name -> google.fhir.r4.core.Instant
	21,  // 144: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.integer:type_name -> google.fhir.r4.core.Integer
	19,  // 145: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.markdown:type_name -> google.fhir.r4.core.Markdown
	32,  // 146: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.oid:type_name -> google.fhir.r4.core.Oid
	33,  // 147: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.positive_int:type_name -> google.fhir.r4.core.PositiveInt
	15,  // 148: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.string_value:type_name -> google.fhir.r4.core.String
	34,  // 149: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.time:type_name -> google.fhir.r4.core.Time
	20,  // 150: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.unsigned_int:type_name -> google.fhir.r4.core.UnsignedInt
	24,  // 151: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.uri:type_name -> google.fhir.r4.core.Uri
	35,  // 152: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.url:type_name -> google.fhir.r4.core.Url
	36,  // 153: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.uuid:type_name -> google.fhir.r4.core.Uuid
	37,  // 154: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.address:type_name -> google.fhir.r4.core.Address
	38,  // 155: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.age:type_name -> google.fhir.r4.core.Age
	39,  // 156: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.annotation:type_name -> google.fhir.r4.core.Annotation
	40,  // 157: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.attachment:type_name -> google.fhir.r4.core.Attachment
	41,  // 158: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.codeable_concept:type_name -> google.fhir.r4.core.CodeableConcept
	18,  // 159: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.coding:type_name -> google.fhir.r4.core.Coding
	42,  // 160: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.contact_point:type_name -> google.fhir.r4.core.ContactPoint
	43,  // 161: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.count:type_name -> google.fhir.r4.core.Count
	44,  // 162: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.distance:type_name -> google.fhir.r4.core.Distance
	45,  // 163: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.duration:type_name -> google.fhir.r4.core.Duration
	46,  // 164: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.human_name:type_name -> google.fhir.r4.core.HumanName
	47,  // 165: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.identifier:type_name -> google.fhir.r4.core.Identifier
	48,  // 166: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.money:type_name -> google.fhir.r4.core.Money
	49,  // 167: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.period:type_name -> google.fhir.r4.core.Period
	50,  // 168: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.quantity:type_name -> google.fhir.r4.core.Quantity
	51,  // 169: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.range:type_name -> google.fhir.r4.core.Range
	52,  // 170: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.ratio:type_name -> google.fhir.r4.core.Ratio
	53,  // 171: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.reference:type_name -> google.fhir.r4.core.Reference
	54,  // 172: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.sampled_data:type_name -> google.fhir.r4.core.SampledData
	55,  // 173: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.signature:type_name -> google.fhir.r4.core.Signature
	56,  // 174: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.timing:type_name -> google.fhir.r4.core.Timing
	57,  // 175: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.contact_detail:type_name -> google.fhir.r4.core.ContactDetail
	58,  // 176: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.contributor:type_name -> google.fhir.r4.core.Contributor
	59,  // 177: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.data_requirement:type_name -> google.fhir.r4.core.DataRequirement
	60,  // 178: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.expression:type_name -> google.fhir.r4.core.Expression
	61,  // 179: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.parameter_definition:type_name -> google.fhir.r4.core.ParameterDefinition
	62,  // 180: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.related_artifact:type_name -> google.fhir.r4.core.RelatedArtifact
	63,  // 181: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.trigger_definition:type_name -> google.fhir.r4.core.TriggerDefinition
	64,  // 182: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.usage_context:type_name -> google.fhir.r4.core.UsageContext
	65,  // 183: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Example.ValueX.dosage:type_name -> google.fhir.r4.core.Dosage
	67,  // 184: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Constraint.SeverityCode.value:type_name -> google.fhir.r4.core.ConstraintSeverityCode.Value
	15,  // 185: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Constraint.SeverityCode.id:type_name -> google.fhir.r4.core.String
	16,  // 186: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Constraint.SeverityCode.extension:type_name -> google.fhir.r4.core.Extension
	68,  // 187: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.ElementDefinitionBinding.StrengthCode.value:type_name -> google.fhir.r4.core.BindingStrengthCode.Value
	15,  // 188: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.ElementDefinitionBinding.StrengthCode.id:type_name -> google.fhir.r4.core.String
	16,  // 189: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.ElementDefinitionBinding.StrengthCode.extension:type_name -> google.fhir.r4.core.Extension
	15,  // 190: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Mapping.LanguageCode.id:type_name -> google.fhir.r4.core.String
	16,  // 191: google.fhir.r4.core.DataElementConstraintOnElementDefinitionDataType.Mapping.LanguageCode.extension:type_name -> google.fhir.r4.core.Extension
	192, // [192:192] is the sub-list for method output_type
	192, // [192:192] is the sub-list for method input_type
	192, // [192:192] is the sub-list for extension type_name
	192, // [192:192] is the sub-list for extension extendee
	0,   // [0:192] is the sub-list for field type_name
}

func init() { file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_init() }
func file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_init() {
	if File_proto_google_fhir_proto_r4_core_profiles_datatypes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataElementConstraintOnElementDefinitionDataType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataElementConstraintOnElementDefinitionDataType_Base); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataElementConstraintOnElementDefinitionDataType_TypeRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataElementConstraintOnElementDefinitionDataType_Example); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataElementConstraintOnElementDefinitionDataType_MinValueX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataElementConstraintOnElementDefinitionDataType_MaxValueX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataElementConstraintOnElementDefinitionDataType_Constraint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataElementConstraintOnElementDefinitionDataType_Mapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataElementConstraintOnElementDefinitionDataType_TypeRef_VersioningCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataElementConstraintOnElementDefinitionDataType_Constraint_SeverityCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataElementConstraintOnElementDefinitionDataType_ElementDefinitionBinding_StrengthCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataElementConstraintOnElementDefinitionDataType_Mapping_LanguageCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Base64Binary)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Boolean)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Canonical)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Code)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Date)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_DateTime)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Decimal)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Id)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Instant)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Integer)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Markdown)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Oid)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_PositiveInt)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_StringValue)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Time)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_UnsignedInt)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Uri)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Url)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Uuid)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Address)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Age)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Annotation)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Attachment)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_CodeableConcept)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Coding)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_ContactPoint)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Count)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Distance)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Duration)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_HumanName)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Identifier)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Money)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Period)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Quantity)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Range)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Ratio)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Reference)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_SampledData)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Signature)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Timing)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_ContactDetail)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Contributor)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_DataRequirement)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Expression)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_ParameterDefinition)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_RelatedArtifact)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_TriggerDefinition)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_UsageContext)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_DefaultValueX_Dosage)(nil),
	}
	file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*DataElementConstraintOnElementDefinitionDataType_MinValueX_Date)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_MinValueX_DateTime)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_MinValueX_Instant)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_MinValueX_Time)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_MinValueX_Decimal)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_MinValueX_Integer)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_MinValueX_PositiveInt)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_MinValueX_UnsignedInt)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_MinValueX_Quantity)(nil),
	}
	file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Date)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_MaxValueX_DateTime)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Instant)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Time)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Decimal)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Integer)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_MaxValueX_PositiveInt)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_MaxValueX_UnsignedInt)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_MaxValueX_Quantity)(nil),
	}
	file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Base64Binary)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Boolean)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Canonical)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Code)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Date)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_DateTime)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Decimal)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Id)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Instant)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Integer)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Markdown)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Oid)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_PositiveInt)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_StringValue)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Time)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_UnsignedInt)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Uri)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Url)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Uuid)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Address)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Age)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Annotation)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Attachment)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_CodeableConcept)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Coding)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_ContactPoint)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Count)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Distance)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Duration)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_HumanName)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Identifier)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Money)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Period)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Quantity)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Range)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Ratio)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Reference)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_SampledData)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Signature)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Timing)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_ContactDetail)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Contributor)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_DataRequirement)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Expression)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_ParameterDefinition)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_RelatedArtifact)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_TriggerDefinition)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_UsageContext)(nil),
		(*DataElementConstraintOnElementDefinitionDataType_Example_ValueX_Dosage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_goTypes,
		DependencyIndexes: file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_depIdxs,
		MessageInfos:      file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_msgTypes,
	}.Build()
	File_proto_google_fhir_proto_r4_core_profiles_datatypes_proto = out.File
	file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_rawDesc = nil
	file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_goTypes = nil
	file_proto_google_fhir_proto_r4_core_profiles_datatypes_proto_depIdxs = nil
}
